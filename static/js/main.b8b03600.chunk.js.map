{"version":3,"sources":["pages/home.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-ingredients-tabs/burger-ingredients-tabs.module.css","components/burger-ingredients-box/burger-ingredients-box.module.css","ui/counter/counter.module.css","components/burger-constructor/burger-constructor.module.css","components/modal-overlay/modal-overlay.module.css","pages/login.module.css","pages/register.module.css","pages/profile.module.css","components/profile-menu-button/profile-menu-button.module.css","components/profile-menu/profile-menu.module.css","components/profile-home/profile-home.module.css","components/profile-orders/profile-orders.module.css","pages/not-found-404.module.css","pages/feed.module.css","components/feed-summary/feed-summary.module.css","utils/constants.ts","utils/utils.ts","utils/request.ts","services/actions/auth-info.ts","components/protected-route/protected-route.tsx","components/unauthorized-route/unauthorized-route.tsx","components/app-header-button/app-header-button.tsx","components/app-header/app-header.tsx","services/actions/ingredients.ts","hooks/category-context.ts","components/burger-ingredients-tabs/burger-ingredients-tabs.tsx","ui/counter/counter.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","components/burger-ingredients-category/burger-ingredients-category.tsx","components/burger-ingredients-box/burger-ingredients-box.tsx","components/burger-ingredients/burger-ingredients.tsx","services/actions/constructor.ts","components/burger-constructor-item/burger-constructor-item.tsx","components/burger-constructor-list/burger-constructor-list.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/modal-order/done.png","services/actions/order-details.ts","components/burger-constructor-modal-order/burger-constructor-modal-order.tsx","components/burger-constructor-submit/burger-constructor-submit.tsx","components/burger-constructor/burger-constructor.tsx","pages/home.tsx","components/common-form/index.tsx","hooks/use-form.ts","pages/login.tsx","pages/register.tsx","services/actions/reset-password.ts","pages/password-recover.tsx","pages/password-reset.tsx","components/profile-menu-button/profile-menu-button.tsx","components/profile-menu/profile-menu.tsx","components/profile-home/profile-home.tsx","services/actions/socket-middleware.ts","ui/ingredient-icon/ingredient-icon.tsx","components/feed-order/feed-order.tsx","components/feed-list/feed-list.tsx","components/profile-orders/profile-orders.tsx","components/route/route.tsx","pages/profile.tsx","components/burger-ingredients-modal-details/burger-ingredients-modal-details.tsx","pages/ingredient.tsx","pages/not-found-404.tsx","components/feed-summary/feed-summary.tsx","utils/types.ts","pages/feed.tsx","components/order-details/order-details.tsx","pages/feed-item.tsx","components/modal-feed-item/modal-feed-item.tsx","components/modal-ingredient/modal-ingredient.tsx","components/modal-request/moddal-request.tsx","components/app/app.tsx","services/reducers/ingredients.ts","services/reducers/constructor.ts","services/reducers/order-details.ts","services/reducers/reset-password.ts","services/reducers/auth-info.ts","services/reducers/socket-middleware.ts","services/reducers/index.ts","index.tsx","utils/socket-middleware.ts","components/order-details/order-details.module.css","components/feed-order/feed-order.module.css","components/burger-constructor-list/burger-constructor-list.module.css","components/app-header/app-header.module.css","components/app-header-button/app-header-button.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/modal/modal.module.css","pages/password-recover.module.css","components/burger-constructor-item/burger-constructor-item.module.css","components/burger-constructor-submit/burger-constructor-submit.module.css","components/burger-constructor-modal-order/burger-constructor-modal-order.module.css","components/common-form/common-form.module.css","pages/ingredient.module.css","components/burger-ingredients-modal-details/burger-ingredients-modal-details.module.css","components/burger-ingredients-category/burger-ingredients-category.module.css","ui/ingredient-icon/ingredient-icon.module.css","components/feed-list/feed-list.module.css","pages/feed-item.module.css","components/modal-request/modal-request.module.css"],"names":["module","exports","WS_ORDERS_URL","WS_FEED_URL","USER_ENDPOINT","RESET_PASSWORD_STEP_RECOVER","RESET_PASSWORD_STEP_RESET","RESET_PASSWORD_STEP_LOGIN","padOrderNumber","num","String","padStart","calcConstructorCounter","bun","items","counter","forEach","i","id","undefined","getRequestParams","method","headers","postRequestParams","patchRequestParams","securedRequestParams","initParams","token","localStorage","getItem","params","mode","cache","credentials","redirect","referrerPolicy","Authorization","securedPostRequestParams","securedGetRequestParams","securedPatchRequestParams","request","endopoint","url","fetch","response","ok","json","Promise","resolve","Error","status","reject","error","checkResult","success","buildParams","p","body","JSON","stringify","makeRequest","endpoint","parseHeaders","console","log","makeSecuredRequest","result","requestRefreshToken","mapIngredientCategoryName","category","requestIngredients","data","cats","map","o","type","find","c","splice","name","sort","l","r","localeCompare","requestOrder","ingredients","number","order","requestPasswordReset","email","message","requestPasswordSet","form","requestRegister","authInfo","requestLogin","requestLogout","setItem","accessToken","refreshToken","requestGetUser","requestPatchUser","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","ProtectedRoute","children","rest","useSelector","state","location","useLocation","dispatch","useDispatch","useEffect","then","catch","render","to","pathname","from","UnauthorizedRoute","getIcon","icon","AppHeaderButton","text","path","active","useMemo","toLowerCase","className","styles","main","iconWrapper","textWrapper","AppHeader","nav","leftItems","homeLink","rightItems","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SET_ACTIVE_TAB","initialCategoryContext","createRef","sauce","CategoryContext","React","createContext","BurgerIngredientsTabs","activeTab","categoryContext","useContext","onSetActive","useCallback","cat","current","scrollIntoView","behavior","value","onClick","Counter","count","BurgerIngredientsCard","ingredient","useDrag","item","collect","monitor","showCount","isDragging","opacity","dragRef","style","_id","background","ref","src","image","alt","priceWrapper","price","logoWrapper","BurgerIngredientsCategory","constructor","filter","ing","BurgerIngredientsBox","positionRef","onScroll","e","persist","preventDefault","getYPos","Math","abs","floor","getBoundingClientRect","top","parentTop","closestCat","pos","BurgerIngredients","burgerIngredients","Provider","CHANGE_INGREDIENTS","SET_PRICE","UPDATE_INGREDIENTS_ORDER","CLEAR_CONSTRUCTOR","BurgerConstructorItem","index","onRemoveIngredient","useRef","moveCard","dragIndex","hoverIndex","dragCard","newCards","useDrop","accept","handlerId","getHandlerId","hover","hoverBoundingRect","hoverMiddleY","bottom","clientOffset","getClientOffset","hoverClientY","y","drop","drag","onDrop","ingredientWrapper","dragIconWrapper","thumbnail","handleClose","BurgerConstructorList","bun_id","isHover","isOver","onDropNewIngredientHandler","dropNewRef","arr","bun_item","key","reduce","acc","uuid","topData","bottomData","selectedIngredients","obj","onHover","topBun","isLocked","margin","bottomBun","ModalOverlay","isShowing","toggle","Modal","props","isOpen","closeModal","closeByEscape","evt","document","addEventListener","removeEventListener","ReactDOM","createPortal","Fragment","modalHeader","headerText","closeButton","modalContent","getElementById","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","CLOSE_ORDER","BurgerConstrctorModalOrder","orderDetails","onCloseOrder","confirmButton","backgroundImage","confirmImage","comment","BurgerConstructorSubmit","authorized","history","useHistory","showOrder","show","buttonWrapper","size","event","stopPropagation","length","getOrder","replace","disabled","BurgerConstructor","HomePage","staticText","DndProvider","backend","HTML5Backend","CommonForm","submitText","onSubmit","target","ctrl","localName","header","useForm","inputValues","useState","setValues","handleChange","LoginPage","user","password","login","onChange","RegisterPage","register","placeholder","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","PasswordRecoverPage","resetPassword","step","setEmail","stepOnSuccess","stepOnFailed","PasswordResetPage","setPassword","ProfileMenuButton","handleClick","push","ProfileMenu","onLogout","ProfileHome","initForm","setDisabled","patchUser","onReset","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","openWsConnection","secured","payload","split","wsActions","wsStart","wsSend","onOpen","onError","onMessage","onClose","IngredientIcon","info","ingredientBg","FeedOrder","store","includes","slice","extra","toString","date","Date","createdAt","Number","content","toLocaleString","idx","zIndex","FeedList","feed","orders","link","ProfileOrders","Route","toLocaleLowerCase","ProfilePage","handleLogout","removeItem","detailsAccessors","accsessor","BurgerIngredientsModalDetails","useParams","image_large","details","IngredientPage","box","NotFound404Page","FeedSummary","wsConnected","done","waiting","totalToday","total","today","firstRow","leftColumn","firstHeader","leftNums","s","rightColumn","nums","row","FeedPage","OrderDetails","oi","groups","grp","g","group","n","nameRow","itemsRow","itemPrice","lastRow","time","FeedItemPage","ws","ModalFeedItem","setShow","onHideDetails","ModalIngredient","ModalRequest","display","App","categories","exact","initialIngredients","failed","initialConstructor","initialOrderDetails","initialResetPassword","initialAuthState","initialWsState","rootReducer","combineReducers","action","parse","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","onerror","onmessage","onclose","send","socketMiddleware","createStore","dispatchHook","selectorHook","StrictMode","basename","process"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,WAAa,yB,sBCA/BD,EAAOC,QAAU,CAAC,KAAO,iC,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,sCAAsC,IAAM,qC,sBCArED,EAAOC,QAAU,CAAC,KAAO,qC,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,sB,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,iC,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,4B,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,8C,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,iD,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,gD,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,kC,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,2B,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,kD,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,sD,sBCAzBD,EAAOC,QAAU,CAAC,KAAO,sD,sBCAzBD,EAAOC,QAAU,CAAC,WAAa,yB,2CCA/BD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,IAAM,0BAA0B,SAAW,uDAAuD,WAAa,iCAAiC,YAAc,kCAAkC,OAAS,6BAA6B,YAAc,6DAA6D,KAAO,2BAA2B,SAAW,wD,+OCCrYC,EAAwB,yCACxBC,EAAsBD,EAAgB,OAStCE,EAAgB,aAGhBC,EAA8B,8BAC9BC,EAA4B,4BAC5BC,EAA4B,4BCf5BC,EAAiB,SAACC,GAC3B,OAAOC,OAAOD,GAAKE,SAAS,EAAG,IAClC,EAEYC,EAAyB,SAACC,EAAaC,GAChD,IAAIC,EAA+B,CAAC,EAYpC,OAXIF,IACAE,EAAQF,GAAO,GAEnBC,EAAME,SAAQ,SAAAC,GACV,IAAMC,EAAKD,EAAEC,QACOC,IAAhBJ,EAAQG,GACRH,EAAQG,GAAM,EAEdH,EAAQG,IAEf,IACMH,CACV,ECiBKK,EAAmC,CACrCC,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,2CAIlCC,EAAiC,2BAChCH,GADgC,IAEnCC,OAAQ,SAGNG,EAAkC,2BACjCJ,GADiC,IAEpCC,OAAQ,UAMNI,EAAuB,SAACC,GAC1B,IAAMC,EAAQC,aAAaC,QAAQ,SAC/BC,EAAM,2BACHJ,GADG,IAENK,KAAM,OACNC,MAAO,WACPC,YAAa,cACbC,SAAU,SACVC,eAAgB,gBAWpB,OATIR,IACAG,EAAM,2BACCA,GADD,IAEFR,QAAQ,2BACDQ,EAAOR,SADP,IAEHc,cAAeT,OAIpBG,CACV,EAEKO,EAA2B,kBAAMZ,EAAqBF,EAA3B,EAC3Be,EAA0B,kBAAMb,EAAqBL,EAA3B,EAC1BmB,EAA4B,kBAAMd,EAAqBD,EAA3B,EAE5BgB,EAAO,iDAAG,WAAUC,EAAmBf,GAA7B,4FACNgB,EFrFsB,wCEqFLD,EADX,kBAGeE,MAAMD,EAAKhB,GAH1B,YAGFkB,EAHE,QAIKC,GAJL,iCAKgBD,EAASE,OALzB,cAKEA,EALF,yBAMGC,QAAQC,QAAQ,CAACF,EAAMF,EAAStB,WANnC,cAQE,IAAI2B,MAAJ,+CAAoBL,EAASM,SAR/B,mFAYDH,QAAQI,OAAO,EAAC,EAAO,CAAEC,MAAK,SAZ7B,0DAAH,wDAgBPC,EAAc,SAACC,GACjB,IAAKA,EACD,MAAML,MAAM,kNAEnB,EAEKM,EAAc,SAAIzB,GAA2F,IAC3G0B,EADgEC,EAA0C,uDAAzB,KAQrF,OALID,EADkB,oBAAX1B,EACHA,IAEAA,EAGJ2B,EACO,2BAAKD,GAAZ,IAAeC,KAAMC,KAAKC,UAAUF,KAG7B,eAAKD,EAEnB,EAEKI,EAAW,iDAAG,WAAUC,EAAkB/B,GAA5B,4GAAoDgC,EAApD,oCAA6G3C,EAA7G,kBAEkBqB,EAAWqB,EAAU/B,GAFvC,0CAELgB,EAFK,KAECxB,EAFD,KAGZ+B,EAAYP,EAAKQ,SACjBS,QAAQC,IAAI,yFAAoBH,EAAU/B,EAAQR,EAASwB,GAC/B,oBAAjBgB,GACPA,EAAaxC,GANL,kBAQLyB,QAAQC,QAAQF,IARX,yCAUZiB,QAAQC,IAAI,0IAA6BH,EAAU/B,EAAnD,MAVY,kBAWLiB,QAAQI,OAAR,OAXK,0DAAH,wDAeXc,EAAkB,iDAAG,WAAUJ,EAAkB/B,GAA5B,wGAAoDgC,EAApD,oCAA6G3C,EAA7G,kBAEEyC,EAAeC,EAAU/B,EAAQgC,GAFnC,cAEbI,EAFa,yBAGZnB,QAAQC,QAAWkB,IAHP,iDAKGC,IALH,qDAOMP,EAAeC,EAAU/B,EAAQgC,GAPvC,eAOTI,EAPS,yBAQRnB,QAAQC,QAAWkB,IARX,iCAUZnB,QAAQI,OAAR,OAVY,yDAAH,wDAcXiB,EAA4B,SAACC,GACtC,OAAQA,GACJ,IAAK,MACD,MAAO,iCACX,IAAK,OACD,MAAO,6CACX,IAAK,QACD,MAAO,iCAElB,EAEYC,EAAkB,iDAAG,kHACPV,EFhKS,eEgKkDxC,GADpD,uBACtBmD,EADsB,EACtBA,KACFC,EAA8B,GACpCD,EAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAY3D,SAAQ,SAAA2D,GAErBH,EAAKI,MAAK,SAAAC,GAAC,OAAIA,EAAEF,OAASA,CAAf,KACZH,EAAKM,OAAO,EAAG,EAAG,CAAEH,OAAMI,KAAMX,EAA0BO,IAEjE,IAR6B,kBASvB5B,QAAQC,QAAgD,CAACuB,EAAMC,EAAKQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEN,KAAKQ,cAAcD,EAAEP,KAAjC,OATlD,2CAAH,qDAYlBS,EAAY,iDAAG,WAAOC,GAAP,0FAClB1D,EAAQC,aAAaC,QAAQ,gBADX,yCAGbkB,QAAQI,UAHK,uBAKkBc,EF/KR,UEgL9BV,EAAYlB,EAA0B,CAAEV,QAAO0D,iBAN3B,uBAKhBN,EALgB,EAKhBA,KAAeO,EALC,EAKVC,MAASD,OALC,kBAOjBvC,QAAQC,QAAQ,CAAE+B,OAAMO,OAAQ9E,EAAe8E,MAP9B,2CAAH,sDAUZE,EAAoB,iDAAG,WAAOC,GAAP,mGACN7B,EFpLS,kBEqL/BL,EAAYhC,EAAmB,CAAEkE,WAFL,uBACxBC,EADwB,EACxBA,QADwB,kBAGzB3C,QAAQC,QAAQ,CAAE0C,aAHO,2CAAH,sDAMpBC,EAAkB,iDAAG,WAAOC,GAAP,mGACJhC,EFzLO,wBE0L7BL,EAAYhC,EAAmBqE,IAFL,uBACtBF,EADsB,EACtBA,QADsB,kBAGvB3C,QAAQC,QAAQ,CAAE0C,aAHK,2CAAH,sDAMlBG,EAAe,iDAAG,WAAOD,GAAP,iGACJhC,EF7LM,iBE8LzBL,EAAYhC,EAAmBqE,IAFR,cACrBE,EADqB,yBAGpB/C,QAAQC,QAAQ8C,IAHI,2CAAH,sDAMfC,EAAY,iDAAG,WAAOH,GAAP,iGACDhC,EFpMG,cEqMtBL,EAAYhC,EAAmBqE,IAFX,cAClBE,EADkB,yBAGjB/C,QAAQC,QAAQ8C,IAHC,2CAAH,sDAMZE,EAAa,iDAAG,WAAOrE,GAAP,mGACCiC,EFxMC,eEyMvBL,EAAYlB,EAA0B,CAAEV,WAFnB,uBACjB+D,EADiB,EACjBA,QADiB,kBAGlB3C,QAAQC,QAAQ,CAAE0C,aAHA,2CAAH,sDAMbvB,EAAmB,iDAAG,mGACzBxC,EAAQC,aAAaC,QAAQ,gBADJ,yCAGpBkB,QAAQC,SAAQ,IAHI,uBAKZY,EFjNe,cEkN9BL,EAAYlB,EAA0B,CAAEV,WANb,cAKzB4C,EALyB,OAQ/B3C,aAAaqE,QAAQ,QAAS1B,EAAK2B,aACnCtE,aAAaqE,QAAQ,eAAgB1B,EAAK4B,cATX,kBAWxBpD,QAAQC,SAAQ,IAXQ,2CAAH,qDAcnBoD,EAAc,iDAAG,uHAECxC,EAA2BxD,EAAemD,EAAYjB,IAFvD,cAEhBwD,EAFgB,yBAGf/C,QAAQC,QAAQ8C,IAHD,uCAKtB/B,QAAQC,IAAI,oLAAZ,MALsB,kBAMfjB,QAAQI,OAAR,OANe,yDAAH,qDAUdkD,EAAgB,iDAAG,WAAOT,GAAP,iGACLhC,EAA2BxD,EAC9CmD,EAAYhB,EAA2BqD,IAFf,cACtBE,EADsB,yBAGrB/C,QAAQC,QAAQ8C,IAHK,2CAAH,sDC5OhBQ,EAAiC,gBACjCC,EAAiC,gBACjCC,EAA+B,eAE/BC,EAAmC,iBACnCC,EAAmC,iBACnCC,EAAiC,gB,sBCHjCC,GAAiC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBAErE,EAA2BC,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,QAAV,IAArCtD,EAAP,EAAOA,QAASc,EAAhB,EAAgBA,QACV2D,EAAWC,cACXC,EAAWC,KAiBjB,OAfAC,qBAAU,WACD/D,GACDa,IAAsBmD,MAAK,WACvBlB,IAAiBkB,MAAK,SAAAxB,GAClBqB,EAAS,CAAExC,KAAM4B,EAAeT,YACnC,IAAEyB,OAAM,WACLJ,EAAS,CAAExC,KAAM6B,GACpB,GACJ,IAAEe,OAAM,WACLJ,EAAS,CAAExC,KAAM6B,GACpB,GAGR,GAAE,IAEChE,EACO,KACAc,EAEH,cAAC,IAAD,2BAAWwD,GAAX,IAAiBU,OAAQ,kBAAOX,CAAP,KAGrB,cAAC,IAAD,CAAUY,GAAI,CAAEC,SAAU,SAAUV,MAAO,CAAEW,KAAMV,KAGlE,E,gBCjCYW,GAA0D,SAAC,GAA2B,IAUxF,EAV+Df,EAAwB,EAAxBA,SAAaC,EAAW,kBAC9F,EAA2BC,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,QAAV,IAArCtD,EAAP,EAAOA,QAASc,EAAhB,EAAgBA,QACV2D,EAAWC,cAEjB,OAAI1E,EACO,KACCc,EAKA,cAAC,IAAD,CAAUmE,IAAY,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUD,aAAV,eAAiBW,OAAQ,MAH3C,cAAC,IAAD,2BAAWb,GAAX,IAAiBU,OAAQ,kBAAOX,CAAP,IAMpC,E,wDCbKgB,GAAU,SAACC,GACb,OAAQA,GACJ,IAAK,SACD,OAAQ,cAAC,cAAD,CAAYnD,KAAK,YAC7B,IAAK,OACD,OAAQ,cAAC,YAAD,CAAUA,KAAK,YAC3B,IAAK,UACD,OAAQ,cAAC,eAAD,CAAaA,KAAK,YAC9B,QACI,OAAO,KAElB,EASYoD,GAA8B,SAAC,GAA0B,IAAxBD,EAAuB,EAAvBA,KAAME,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAE9CP,EAAaR,cAAbQ,SAEFQ,EAASC,mBAAQ,WACnB,OAAOT,EAASU,iBAAT,OAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMG,cAC3C,GAAE,CAACV,EAAUO,IAGd,OACI,eAAC,KAAD,CAAMI,UAAWC,KAAOC,KAAMd,GAAI,CAAEC,SAAQ,OAAEO,QAAF,IAAEA,IAAQ,GAAIjB,MAAO,CAAEW,KAAMD,IAAzE,UACI,mBAAGW,UAAWC,KAAOE,YAArB,SAAoCX,GAAQC,KAC5C,mBAAGO,UAAS,sCAAiCC,KAAOG,YAAxC,YAAuDP,EAASI,KAAOJ,OAAS,IAA5F,SACKF,MAIhB,EChCYU,GAAgB,WAC3B,IAAQhB,EAAaR,cAAbQ,SAER,OACE,yBAAQW,UAAWC,KAAOK,IAA1B,UACE,sBAAKN,UAAWC,KAAOM,UAAvB,UACE,cAAC,GAAD,CAAiBX,KAVZ,IAUwBH,KAAK,SAASE,KAAK,uEAChD,cAAC,GAAD,CAAiBC,KAVZ,QAUwBH,KAAK,OAAOE,KAAK,iFAEhD,cAAC,KAAD,CAAMK,UAAWC,KAAOO,SAAUpB,GAAI,CAAEC,SAAU,IAAKV,MAAO,CAAEW,KAAMD,IAAtE,SAAoF,cAAC,QAAD,MACpF,qBAAKW,UAAWC,KAAOQ,WAAvB,SACE,cAAC,GAAD,CAAiBb,KAbd,WAawBH,KAAK,UAAUE,KAAK,wFAItD,E,+DCtBYe,GAAqD,0BACrDC,GAAqD,0BACrDC,GAAmD,yBAEnDC,GAAmC,iBCAnCC,GACb,CACItI,IAAKuI,sBACLb,KAAMa,sBACNC,MAAOD,uBAGEE,GAAkBC,IAAMC,cAAgCL,ICNxDM,GAAwB,WAEnC,MAA4B1C,IAAY,SAAAC,GAAK,OAAIA,EAAM3B,WAAV,IAArCqE,EAAR,EAAQA,UAAWlF,EAAnB,EAAmBA,KACbmF,EAAkBC,qBAAWN,IAE7BnC,EAAWC,KAEXyC,EAAcC,uBAAY,SAACnF,GAC/B,IACS,EADHoF,EAAMvF,EAAKI,MAAK,SAAAC,GAAC,OAAIA,EAAEF,OAASA,CAAf,IACnBoF,IACF,UAAAJ,EAAgBI,EAAIpF,MAAMqF,eAA1B,SAAmCC,eAAe,CAAEC,SAAU,WAC9D/C,EAAS,CAAExC,KAAMuE,GAAgBhB,OAAQ6B,EAAIpF,OAEhD,GAAE,CAACwC,EAAU3C,EAAMmF,IAGpB,OACE,qBAAKtB,UAAWC,KAAOC,KAAvB,SACG/D,EAAKC,KAAI,SAAAsF,GAAG,OACX,cAAC,OAAD,CAAKI,MAAOJ,EAAIpF,KAAqBuD,OAAQ6B,EAAIpF,OAAS+E,EAAWU,QAASP,EAA9E,SACGE,EAAIhF,MADoBgF,EAAIpF,KADpB,KAOlB,E,4FC9BY0F,GAA6C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACzD,OAAKA,GAASA,EAAQ,EACX,KAGP,qBAAKjC,UAAWC,KAAOC,KAAvB,SACI,mBAAGF,UAAU,4BAAb,SAA0CiC,KAGrD,ECCYC,GAAoC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYF,EAAY,EAAZA,MACxDrD,EAAWC,cACjB,EAA0CuD,aAAQ,CAChD9F,KAAM,iBACN+F,KAAK,eAAMF,GACXG,QAAS,SAAAC,GAAO,MAAK,CACnBC,WAAYD,EAAQE,aACpBC,QAASH,EAAQE,aAAe,GAAM,EAFxB,IAHlB,0BAASD,EAAT,EAASA,UAAWE,EAApB,EAAoBA,QAAWC,EAA/B,KASA,OACE,eAAC,KAAD,CAAM3C,UAAWC,KAAOC,KAAM0C,MAAO,CAAEF,WACrCtD,GAAI,CAAEC,SAAS,gBAAD,OAAkB8C,EAAWU,KAAOlE,MAAO,CAAEmE,WAAYlE,IADzE,UAEG4D,GAAa,cAAC,GAAD,CAASP,MAAOA,IAC9B,sBAAKc,IAAKJ,EAAV,UACE,qBAAKK,IAAKb,EAAWc,MAAOC,IAAKf,EAAWzF,OAC5C,sBAAKsD,UAAWC,KAAOkD,aAAvB,UACE,mBAAGnD,UAAS,mCAA8BC,KAAOG,aAAjD,SACG+B,EAAWiB,QAEd,qBAAKpD,UAAWC,KAAOoD,YAAvB,SACE,cAAC,gBAAD,CAAc/G,KAAK,iBAGvB,mBAAG0D,UAAU,4BAAb,SACGmC,EAAWzF,YAKrB,ECpCY4G,GAA2D,SAAC,GAAc,IAAD,EAAXhH,EAAW,EAAXA,KAEzE,EAAwBoC,IAAY,SAAAC,GAAK,OAAIA,EAAM3B,WAAV,IAAjCvE,EAAR,EAAQA,MAAO0D,EAAf,EAAeA,KACTzD,EAAO,UAAGgG,IAAY,SAAAC,GAAK,OAAIA,EAAM4E,YAAY7K,OAAtB,WAApB,QAAsD,CAAC,EAE9D4I,EAAkBC,qBAAWN,IAE7BS,EAAM5B,mBAAQ,kBAAM3D,EAAKI,MAAK,SAAAC,GAAC,OAAIA,EAAEF,OAASA,CAAf,GAAjB,GAAuC,CAACH,EAAMG,IAClE,OAAKoF,EAIH,sBAAK,wBAAgBpF,EAAhB,QAA4B0D,UAAWC,KAAOC,KAAnD,UACE,mBAAGF,UAAS,qCAAgCC,KAAOG,aAAe2C,IAAKzB,EAAgBI,EAAIpF,MAA3F,SAAoGoF,EAAIhF,OACvGjE,EAAM+K,QAAO,SAAAC,GAAG,OAAIA,EAAInH,OAASA,CAAjB,IAAuBF,KAAI,SAAAqH,GAAG,OAC7C,cAAC,GAAD,CAAqCtB,WAAYsB,EAAKxB,MAAOvJ,EAAQ+K,EAAIZ,MAA7CY,EAAIZ,IADa,OAL1C,IAUV,ECnBYa,GAAuB,WAElC,IAAMvH,EAAOuC,IAAY,SAAAC,GAAK,OAAIA,EAAM3B,YAAYb,IAAtB,IACxBmF,EAAkBC,qBAAWN,IAE7BnC,EAAWC,KAEX4E,EAAc5C,sBAEd6C,EAAWnC,uBAAY,SAACoC,GAC5BA,EAAEC,UACFD,EAAEE,iBACF,IAAMC,EAAU,SAACjB,GAAD,OAA0CA,EAAIpB,QAAUsC,KAAKC,IAAID,KAAKE,MAAMpB,EAAIpB,QAAQyC,wBAAwBC,MAAQ,CAAxH,EACVC,EAAYX,EAAYhC,QAAUgC,EAAYhC,QAAQyC,wBAAwBC,IAAM,EAAI,EACxFE,EAAa,CAAEjI,KAAMH,EAAK,GAAGG,KAAMkI,IAAKR,EAAQ1C,EAAgBnF,EAAK,GAAGG,QAC9EH,EAAKxD,SAAQ,SAAA+I,GACX,GAAI6C,EAAWjI,OAASoF,EAAIpF,KAA5B,CAGA,IAAM+H,EAAMJ,KAAKC,IAAII,EAAYN,EAAQ1C,EAAgBI,EAAIpF,QACzDiI,EAAWC,IAAMH,IACnBE,EAAWjI,KAAOoF,EAAIpF,KACtBiI,EAAWC,IAAMH,EAJlB,CAMF,IACDvF,EAAS,CAAExC,KAAMuE,GAAgBhB,OAAQ0E,EAAWjI,MACrD,GAAE,CAACH,EAAMwH,EAAa7E,EAAUwC,IAEjC,OACE,qBAAKtB,UAAS,UAAKC,KAAOC,KAAZ,eAA+B0D,SAAUA,EAAUb,IAAKY,EAAtE,SACGxH,EAAKC,KAAI,SAAAsF,GAAG,OAAK,cAAC,GAAD,CACDpF,KAAMoF,EAAIpF,MAApBoF,EAAIpF,KADE,KAIlB,ECpCYmI,GAAoB,WAE/B,OACE,qBAAKzE,UAAW0E,KAAkBxE,KAAlC,SACE,eAACe,GAAgB0D,SAAjB,CAA0B7C,MAAOhB,GAAjC,UACE,cAAC,GAAD,IACA,cAAC,GAAD,QAIP,E,4DCdY8D,GAA2C,qBAC3CC,GAAyB,YACzBC,GAAuD,2BACvDC,GAAyC,oB,oBCWzCC,GAAoC,SAAC,GAAyC,IAAvC9I,EAAsC,EAAtCA,KAAM+I,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAEzDzM,EAAQiG,IAAY,SAAAC,GAAK,OAAIA,EAAM4E,YAAY9K,KAAtB,IAEzBqG,EAAWC,KACXgE,EAAMoC,iBAAuB,MAE7BC,EAAW3D,uBAAY,SAAC4D,EAAmBC,GAC/C,IAAMC,EAAW9M,EAAM4M,GACjBG,EAAQ,aAAO/M,GACrB+M,EAAS/I,OAAO4I,EAAW,GAC3BG,EAAS/I,OAAO6I,EAAY,EAAGC,GAC/BzG,EAAS,CAAExC,KAAMwI,GAA0BrM,MAAM,aAAK+M,IACvD,GAAE,CAAC/M,EAAOqG,IAEX,EAAiB2G,aAAmB,CAClCC,OAAQ,mBACRpD,QAFkC,SAE1BC,GACN,MAAO,CACLoD,UAAWpD,EAAQqD,eAEtB,EACDC,MAPkC,SAO5BxD,EAAME,GAAU,IAAD,EACnB,GAAKQ,EAAIpB,QAAT,CAGA,IAAM0D,EAAYhD,EAAK4C,MACjBK,EAAaL,EACnB,GAAII,IAAcC,EAAlB,CAGA,IAAMQ,EAAiB,UAAG/C,EAAIpB,eAAP,aAAG,EAAayC,wBACjC2B,GAAgBD,EAAkBE,OAASF,EAAkBzB,KAAO,EACpE4B,EAAe1D,EAAQ2D,kBACvBC,EAAeF,EAAgBA,EAAaG,EAAIN,EAAkBzB,IAAO,EAC3EgB,EAAYC,GAAca,EAAeJ,GAGzCV,EAAYC,GAAca,EAAeJ,IAG7CX,EAASC,EAAWC,GACpBjD,EAAK4C,MAAQK,EAZZ,CALA,CAkBF,IA5BMe,EAAT,oBA+BA,EAA4BjE,aAAQ,CAClC9F,KAAM,mBACN+F,KAAM,CAAE4C,SACR3C,QAAS,SAAAC,GAAO,MAAK,CACnBG,QAASH,EAAQE,aAAe,EAAI,EADtB,IAHlB,mBAASC,EAAT,KAASA,SAST4D,EATA,MASKD,EAAKtD,IAKV,OAAQ,qBAAK/C,UAAWC,KAAOC,KAAM0C,MAAO,CAAEF,WAAWK,IAAKA,EAAKwD,OAJhD,SAAC1C,GAClBA,EAAEC,UACFD,EAAEE,gBACH,EACO,SACN,sBAAK/D,UAAWC,KAAOuG,kBAAvB,UACE,qBAAKxG,UAAWC,KAAOwG,gBAAvB,SACE,cAAC,YAAD,CAAUnK,KAAK,cAEjB,cAAC,sBAAD,CACEqD,KAAMzD,EAAKQ,KACXgK,UAAWxK,EAAK+G,MAChBG,MAAOlH,EAAKkH,MACZuD,YAAa,kBAAMzB,EAAmBD,EAAzB,QAGpB,E,UC5EY2B,GAA4B,WAEvC,IAAM5J,EAAc0B,IAAY,SAAAC,GAAK,OAAIA,EAAM3B,YAAYvE,KAAtB,IACrC,EAA+BiG,IAAY,SAAAC,GAAK,OAAIA,EAAM4E,WAAV,IAAnCsD,EAAb,EAAQrO,IAAaC,EAArB,EAAqBA,MAGfqG,EAAWC,KAMjB,EAAkC0G,aAAuC,CACvEC,OAAQ,iBACRpD,QAAS,SAAAC,GAAO,MAAK,CACnBuE,QAASvE,EAAQwE,SADH,EAGhBV,KALuE,SAKlEhE,GACH2E,EAA2B3E,EAC5B,IAPH,mBAASyE,EAAT,KAASA,QAAWG,EAApB,KAUAjI,qBAAU,WACR,IAAMkI,EAAMzO,EAAK,aAAOA,GAAS,GACjC,GAAIoO,EAAQ,CACV,IAAMM,EAAW,CAAEtO,GAAIgO,EAAQO,IAAK,IACpCF,EAAIzK,OAAO,EAAG,EAAG0K,EAAUA,EAC5B,CACD,IAAM/D,EAAQ8D,EAAI9K,KAAI,SAAAiG,GAAI,aAAKA,EAAI,UAAGrF,EAAYT,MAAK,SAAAF,GAAC,OAAIA,EAAEwG,MAAQR,EAAKxJ,EAAnB,WAArB,aAAG,EAA0CuK,MAAQ,CAA9D,IAAkEiE,QAAO,SAACC,EAAKlE,GAAN,OAAgB,OAACkE,QAAD,IAACA,IAAO,IAAR,OAAclE,QAAd,IAAcA,IAAS,EAAvC,GAA2C,GAC9ItE,EAAS,CAAExC,KAAMuI,GAAWzB,SAC7B,GAAE,CAACyD,EAAQpO,EAAOuE,EAAa8B,IAEhC,IAAMkI,EAA6BvF,uBAAY,SAACY,GAC9C,IAAM6E,EAAMzO,EAAK,aAAOA,GAAS,GAC7BD,EAAMqO,EApCiE,QAqCjExE,EArCwD/F,KAsChE9D,EAAM6J,EAAKQ,IAEXqE,EAAIzK,QAAQ,EAAG,EAAG,CAAE5D,GAAIwJ,EAAKQ,IAAKuE,IAAKG,iBAEzCzI,EAAS,CAAExC,KAAMsI,GAAoBpM,IAAKA,EAAKC,MAAOyO,GACvD,GAAE,CAACpI,EAAUrG,EAAOoO,IAEf3B,EAAqBzD,uBAAY,SAACwD,GACtC,IAAMiC,EAAG,aAAOzO,GAChByO,EAAIzK,OAAOwI,EAAO,GAClBnG,EAAS,CAAExC,KAAMsI,GAAoBpM,IAAKqO,EAAQpO,MAAOyO,GAC1D,GAAE,CAACzO,EAAOoO,EAAQ/H,IAGb0I,EAAU1H,mBAAQ,kBAAM9C,EAAYT,MAAK,SAAA3D,GAAC,OAAIA,EAAEiK,MAAQgE,CAAd,GAAxB,GAA+C,CAAC7J,EAAa6J,IAC/EY,EAAa3H,mBAAQ,kBAAM0H,CAAN,GAAe,CAACA,IACrCE,EAAsB5H,mBAAQ,yBAAMrH,QAAN,IAAMA,OAAN,EAAMA,EAAO2D,KAAI,SAAAiG,GACnD,IAAMsF,EAAM3K,EAAYT,MAAK,SAAAF,GAAC,OAAIA,EAAEwG,MAAQR,EAAKxJ,EAAnB,IAC9B,GAAI8O,EACF,OAAO,2BAAKA,GAAZ,IAAiBP,IAAK/E,EAAK+E,KAG9B,IAAE5D,QAAO,SAAAnH,GAAC,YAAUvD,IAANuD,CAAJ,GANyB,GAMH,CAAC5D,EAAOuE,IAEzC,OACE,sBAAK,cAAY,cAAcgD,UAAS,UAAKC,KAAOC,KAAZ,YAAoB4G,EAAU7G,KAAO2H,QAAU,IAAM7E,IAAKkE,EAAlG,UACGO,GAAW,qBAAKxH,UAAWC,KAAO4H,OAAvB,SACV,cAAC,sBAAD,CACEvL,KAAK,MACLwL,UAAU,EACVnI,KAAI,UAAK6H,EAAQ9K,KAAb,+BACJgK,UAAWc,EAAQvE,MACnBG,MAAOoE,EAAQpE,UAElB3K,GAAS,qBAAKuH,UAAS,UAAKC,KAAOjD,YAAZ,eAAsC4F,MAAO,CAAEmF,OAAQlB,EAAS,IAAM,UAApF,gBACPa,QADO,IACPA,OADO,EACPA,EAAqBtL,KAAI,SAACiG,EAAM4C,GAC/B,OAAQ5C,GAAQ,cAAC,GAAD,CAEdnG,KAAMmG,EAAM4C,MAAOA,EACnBC,mBAAoBA,GAFf7C,EAAK+E,IAGb,MAGFK,GAAc,qBAAKzH,UAAWC,KAAO+H,UAAvB,SACb,cAAC,sBAAD,CACE1L,KAAK,SACLwL,UAAU,EACVnI,KAAI,UAAK8H,EAAW/K,KAAhB,yBACJgK,UAAWe,EAAWxE,MACtBG,MAAOqE,EAAWrE,YAI3B,E,6DClGY6E,GAA+D,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAMtF,OACI,qBAAKnI,UAAWC,KAAOC,KAAM6B,QANP,WAClBmG,GACAC,GAEP,GAIJ,ECAYC,GAAoB,SAACC,GAE9B,IAAMC,EAASD,EAAMH,UAEfK,EAAa9G,uBAAY,WACvB6G,GACAD,EAAMF,QAEb,GAAE,CAACG,EAAQD,IAEZrJ,qBAAU,WACN,SAASwJ,EAAcC,GACH,WAAZA,EAAIrB,KACJmB,GAEP,CACD,GAAID,EAEA,OADAI,SAASC,iBAAiB,UAAWH,GAC9B,WACHE,SAASE,oBAAoB,UAAWJ,EAC3C,CAER,GAAE,CAACF,EAAQC,IAEZ,IAAsB5I,EAStB,OAAO0I,EAAMH,UAAYW,IAASC,aAC9B,eAAC,IAAMC,SAAP,WACI,qBAAK/I,UAAWC,KAAOC,KAAvB,SACI,sBAAKF,UAAU,aAAf,UACI,qBAAKA,UAAWC,KAAO+I,YAAvB,UAbMrJ,EAcY0I,EAAMY,WAb5B,qCACJ,mBAAGjJ,UAAS,4BAAZ,SACKL,IAEL,wBAAQ,cAAY,kBAAkBK,UAAWC,KAAOiJ,YAAanH,QAASwG,EAA9E,SAA0F,cAAC,aAAD,CAAWjM,KAAK,oBAWlG,qBAAK0D,UAAWC,KAAOkJ,aAAvB,SACKd,EAAM7J,gBAInB,cAAC,GAAD,CAAc0J,UAAWG,EAAMH,UAAWC,OAAQE,EAAMF,YACzCO,SAASU,eAAe,iBACzC,IACT,E,oBC5Dc,OAA0B,iCCK5BC,GAAyC,oBACzCC,GAAyC,oBACzCC,GAAuC,mBACvCC,GAA6B,cCD7BC,GAA6B,WACtC,IAAMvM,EAAQwB,IAAY,SAAAC,GAAK,OAAIA,EAAM+K,aAAazM,MAAvB,IACzB6B,EAAWC,KACX4K,EAAelI,uBAAY,WAC7B3C,EAAS,CAAExC,KAAMkN,IACpB,GAAE,CAAC1K,IAEJ,OACI,sBAAKkB,UAAWC,KAAOC,KAAvB,UACI,mBAAGF,UAAS,8BAAZ,SAA8C9C,IAC9C,mBAAG8C,UAAU,6BAAb,iIACA,wBAAQA,UAAWC,KAAO2J,cACtBhH,MAAO,CAAEiH,gBAAgB,OAAD,OAASC,GAAT,MAA4B/H,QAAS4H,IACjE,mBAAG3J,UAAU,4BAAb,qJACA,mBAAGA,UAAS,oCAA+BC,KAAO8J,SAAlD,8PAGX,ECbYC,GAA0B,WACrC,IAAMC,EAAavL,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAASxC,OAAnB,IAC9B2D,EAAWC,cACjB,EAAoCH,IAAY,SAAAC,GAAK,OAAIA,EAAM4E,WAAV,IAAtCvG,EAAf,EAAQvE,MAAoBD,EAA5B,EAA4BA,IACtB0R,EAAUC,cACV/G,EAAQ1E,IAAY,SAAAC,GAAK,OAAIA,EAAM4E,YAAYH,KAAtB,IACzBgH,EAAY1L,IAAY,SAAAC,GAAK,OAAIA,EAAM+K,aAAaW,IAAvB,IAE7BvL,EAAWC,KAqBjB,OACE,sBAAKiB,UAAWC,KAAOC,KAAvB,UACE,mBAAGF,UAAU,+BAAb,SACGoD,IAEH,qBAAKpD,UAAWC,KAAOE,YAAvB,SACE,cAAC,gBAAD,CAAc7D,KAAK,cAErB,qBAAK0D,UAAWC,KAAOqK,cAAvB,SACE,cAAC,UAAD,CAAQhO,KAAK,UAAUiO,KAAK,QAAQxI,QA5BhB,SAACyI,GAA2B,IAAD,EAGnD,GAFAA,EAAM1G,UACN0G,EAAMC,kBACDR,EAAL,CAIA,IAAM/C,EAAG,iBAAGlK,QAAH,IAAGA,OAAH,EAAGA,EAAaZ,KAAI,SAAAxD,GAAC,OAAIA,EAAEC,EAAN,WAArB,QAAkC,IACpC,OAAHL,QAAG,IAAHA,OAAA,EAAAA,EAAKkS,QAAS,GAChBxD,EAAIzK,QAAQ,EAAG,EAAGjE,EAAKA,GAEzBsG,EFb8B,SAAC9B,GAC/B,OAAO,SAAC8B,GACJA,EAAS,CAAExC,KAAM+M,KACjBtM,EAAaC,GAAaiC,MAAK,YAAuB,IAApBvC,EAAmB,EAAnBA,KAAMO,EAAa,EAAbA,OACpC6B,EAAS,CAAExC,KAAMgN,GAAmB5M,OAAMO,WAC1C6B,EAAS,CAAExC,KAAMyI,IACpB,IAAE7F,OAAM,WACLJ,EAAS,CAAExC,KAAMiN,IACpB,GACJ,CACJ,CEGYoB,CAASzD,GALjB,MAFCgD,EAAQU,QAAQ,CAAEvL,SAAU,SAAUV,MAAO,CAAEW,KAAMV,IAQxD,EAgBqEiM,UAAWzH,IAAU5K,EAArF,+FAIF,cAAC,GAAD,CAAO0P,UAAWkC,EAAWjC,OAlBR,WACvBrJ,EAAS,CAAExC,KAAMkN,IAClB,EAgB0DP,WAAW,IAAlE,SACE,cAAC,GAAD,QAKP,ECvDY6B,GAAoB,WAC/B,OACE,sBAAK9K,UAAWC,KAAOC,KAAvB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,MAGL,E,oBCJY6K,GAAW,WACtB,OAAQ,qCACN,oBAAI/K,UAAS,+BAA0BC,KAAO+K,YAA9C,mGACA,eAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,UACE,cAAC,GAAD,IACA,cAAC,GAAD,SAGL,E,mDCPYC,GAKR,SAAC,GACkD,IAAlD5M,EAAiD,EAAjDA,SAAUyK,EAAuC,EAAvCA,WAAYoC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAchC,OACI,uBAAMtL,UAAWC,KAAOC,KAAMoL,SAbb,SAACzH,GAClBA,EAAEC,UACFD,EAAEE,iBACF,IAH0D,EAGpDwH,EAAS1H,EAAE0H,OACX5D,EAAiB,CAAC,EAJkC,eAKzC4D,GALyC,IAK1D,2BAAyB,CAAC,IAAjBC,EAAgB,QACG,WAAhB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,aACN9D,EAAI6D,EAAK9O,MAAQ8O,EAAK1J,MAE7B,CATyD,+BAU1DwJ,EAAS3D,EACZ,EAEG,UACI,oBAAI3H,UAAS,qCAAgCC,KAAOyL,QAApD,SAA+DzC,IAC9DzK,EACD,qBAAKwB,UAAWC,KAAOqK,cAAvB,SACI,cAAC,UAAD,CAAQhO,KAAK,UAAUiO,KAAK,QAA5B,SAAqCc,QAIpD,E,SClCQM,GAAU,SAAIC,GACvB,MAA0BC,mBAASD,GAAnC,mBAAOrO,EAAP,KAAauO,EAAb,KAQA,MAAO,CAAEvO,OAAMwO,aANM,SAACvB,GAClBA,EAAM1G,UACN0G,EAAMzG,iBACN,MAAwByG,EAAMe,OAAtBzJ,EAAR,EAAQA,MAAOpF,EAAf,EAAeA,KACfoP,EAAU,2BAAKvO,GAAN,mBAAab,EAAOoF,IAChC,EAC4BgK,YAChC,ECJYE,GAAY,WACrB,IAWgB,EAXV5O,EAAQsB,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAASwO,KAAK7O,KAAxB,IACzB6M,EAAavL,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAASxC,OAAnB,IAC9B6D,EAAWC,KACjB,EAA+B4M,GAAoB,CAAEvO,MAAOA,EAAO8O,SAAU,KAArE3O,EAAR,EAAQA,KAAMwO,EAAd,EAAcA,aACRnN,EAAWC,cAOjB,OAAIoL,EACQ,cAAC,IAAD,CAAU7K,IAAY,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUD,aAAV,eAAiBW,OAAQ,MAK/C,qBAAKU,UAAWC,KAAOC,KAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,eAAC,GAAD,CAAYiJ,WAAW,2BAAOoC,WAAW,iCAAQC,SAZzC,SAAC,GAAoC,IAAlClO,EAAiC,EAAjCA,MAAO8O,EAA0B,EAA1BA,SAC1BpN,E1BuBuB,SAACvB,GAC5B,OAAO,SAACuB,GACJA,EAAS,CAAExC,KAAM2B,IACjBP,EAAaH,GAAM0B,MAAK,SAAAxB,GACpBlE,aAAaqE,QAAQ,QAASH,EAASI,aACvCtE,aAAaqE,QAAQ,eAAgBH,EAASK,cAC9CgB,EAAS,CAAExC,KAAM4B,EAAeT,YACnC,IAAEyB,OAAM,WACLJ,EAAS,CAAExC,KAAM6B,GACpB,GACJ,CACJ,C0BlCgBgO,CAAM,CAAE/O,QAAO8O,aAC3B,EAUW,UACI,cAAC,cAAD,CAAYxP,KAAK,QAAQoF,MAAOvE,EAAKH,MAAOgP,SAAUL,IACtD,cAAC,iBAAD,CAAejK,MAAOvE,EAAK2O,SAAUxP,KAAK,WAAW0P,SAAUL,OAEnE,oBAAG/L,UAAU,kDAAb,6IAAwF,cAAC,KAAD,CAAMZ,GAAG,YAAT,6HACxF,oBAAGY,UAAU,kDAAb,yFAA+E,cAAC,KAAD,CAAMZ,GAAG,mBAAT,kIAI9F,E,qBC3BYiN,GAAe,WACxB,IAAMvN,EAAWC,KAEjB,EAA+B4M,GAAsB,CAAEvO,MAAO,GAAI8O,SAAU,GAAIxP,KAAM,KAA9Ea,EAAR,EAAQA,KAAMwO,EAAd,EAAcA,aAMd,OACI,qBAAK/L,UAAWC,KAAOC,KAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,eAAC,GAAD,CAAYiJ,WAAW,qEAAcoC,WAAW,+GAAqBC,SAP1D,SAAC,GAA0C,IAAxC5O,EAAuC,EAAvCA,KAAMU,EAAiC,EAAjCA,MAAO8O,EAA0B,EAA1BA,SACnCpN,E3BW0B,SAACvB,GAC/B,OAAO,SAACuB,GACJA,EAAS,CAAExC,KAAM2B,IACjBT,EAAgBD,GAAM0B,MAAK,SAACxB,GACxBlE,aAAaqE,QAAQ,QAASH,EAASI,aACvCtE,aAAaqE,QAAQ,eAAgBH,EAASK,cAC9CgB,EAAS,CAAExC,KAAM4B,EAAeT,YACnC,IAAEyB,OAAM,WACLJ,EAAS,CAAExC,KAAM6B,GACpB,GACJ,CACJ,C2BtBgBmO,CAAS,CAAE5P,OAAMU,QAAO8O,aACpC,EAKW,UACI,cAAC,SAAD,CAAO5P,KAAK,OAAOI,KAAK,OAAO6P,YAAY,qBAAMzK,MAAOvE,EAAKb,KAAM0P,SAAUL,IAC7E,cAAC,cAAD,CAAYrP,KAAK,QAAQoF,MAAOvE,EAAKH,MAAOgP,SAAUL,IACtD,cAAC,iBAAD,CAAeK,SAAUL,EAAcjK,MAAOvE,EAAK2O,SAAUxP,KAAK,gBAEtE,oBAAGsD,UAAU,kDAAb,kIAAqF,cAAC,KAAD,CAAMZ,GAAG,SAAT,mDAIpG,E,oBC7BYoN,GAAmD,yBACnDC,GAAmD,yBACnDC,GAAiD,wBCMjDC,GAAsB,WAC/B,MAA0BjO,IAAY,SAAAC,GAAK,OAAIA,EAAMiO,aAAV,IAAnCC,EAAR,EAAQA,KAAMxP,EAAd,EAAcA,QACd,EAA0BwO,mBAAS,IAAnC,mBAAOzO,EAAP,KAAc0P,EAAd,KACMhO,EAAWC,KACXmL,EAAUC,cACVvL,EAAWC,cACjBG,qBAAU,WACF6N,IAAS5U,GACTiS,EAAQU,QAAQ,CAAEvL,SAAU,kBAAmBV,MAAO,CAAEW,KAAMV,IAErE,GAAE,CAACiO,EAAM3C,EAASpL,EAAUF,IAE7B,IAAMwN,EAAW3K,uBAAY,SAAAoC,GACzBA,EAAEC,UACFD,EAAEE,iBACF+I,EAASjJ,EAAE0H,OAAOzJ,MACrB,GAAE,CAACgL,IAKJ,OACI,qBAAK9M,UAAWC,KAAOC,KAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,cAAC,GAAD,CAAYiJ,WAAW,4HAAwBoC,WAAW,2EAAeC,SANpE,SAAC,GAA0B,IAAxBlO,EAAuB,EAAvBA,MAChB0B,EDT+B,SAAC1B,EAAe2P,EAAuBC,GAC1E,OAAO,SAAClO,GACJA,EAAS,CAAExC,KAAMkQ,KACjBrP,EAAqBC,GAAO6B,MAAK,YAAkB,IAAf5B,EAAc,EAAdA,QAChCyB,EAAS,CAAExC,KAAMmQ,GAAwBpP,UAAS0P,iBACrD,IAAE7N,OAAM,SAAAnE,GACL+D,EAAS,CAAExC,KAAMoQ,GAAuB3R,QAAOiS,gBAClD,GACJ,CACJ,CCAgBJ,CAAcxP,EAAOnF,EAA2BD,GAC5D,EAIW,SACI,cAAC,cAAD,CAAY0E,KAAK,QAAQoF,MAAO1E,EAAOgP,SAAUA,MAErD,mBAAGpM,UAAU,kDAAb,SAAgE3C,IAChE,oBAAG2C,UAAU,kDAAb,0GAAiF,cAAC,KAAD,CAAMZ,GAAG,SAAT,mDAIhG,EC9BY6N,GAAoB,WAC7B,MAA0BvO,IAAY,SAAAC,GAAK,OAAIA,EAAMiO,aAAV,IAAnCC,EAAR,EAAQA,KAAMxP,EAAd,EAAcA,QACRyB,EAAWC,KACXmL,EAAUC,cACVvL,EAAWC,cACjB,EAA+B8M,GAAQ,CAAEO,SAAU,GAAI5S,MAAO,KAAtDiE,EAAR,EAAQA,KAAMwO,EAAd,EAAcA,aAGd/M,qBAAU,WAAO,IAAD,IAENY,EAAI,UAAGhB,EAASD,aAAZ,iBAAG,EAAgBW,YAAnB,aAAG,EAAsBD,SACtB,qBAATO,GAAwC,oBAATA,EAK/BiN,IAAS7U,GACN6U,IAAS3U,GACZgS,EAAQU,QAAQ,CAAEvL,SAAU,SAAUV,MAAO,CAAEW,KAAMV,KANrDsL,EAAQU,QAAQ,CAAEvL,SAAU,aAAcV,MAAO,CAAEW,KAAMV,IAQhE,GAAE,CAACsL,EAAS2C,EAAMjO,IAMnB,OACI,qBAAKoB,UAAWC,KAAOC,KAAvB,SACI,sBAAKF,UAAU,YAAf,UACI,eAAC,GAAD,CAAYiJ,WAAW,4HAAwBoC,WAAW,yDAAYC,SAPjE,SAAC,GAAoC,IAAlCY,EAAiC,EAAjCA,SAAU5S,EAAuB,EAAvBA,MAC1BwF,EFJ6B,SAACvB,EAA0BwP,EAAuBC,GACnF,OAAO,SAAClO,GACJA,EAAS,CAAExC,KAAMkQ,KACjBlP,EAAmBC,GAAM0B,MAAK,YAAkB,IAAf5B,EAAc,EAAdA,QAC7ByB,EAAS,CAAExC,KAAMmQ,GAAwBpP,UAAS0P,iBACrD,IAAE7N,OAAM,SAAAnE,GACL+D,EAAS,CAAExC,KAAMoQ,GAAuB3R,QAAOiS,gBAClD,GACJ,CACJ,CELgBE,CAAY,CAAEhB,WAAU5S,SAASpB,EAA2BF,GACxE,EAKW,UACI,cAAC,iBAAD,CAAe0E,KAAK,WAAWoF,MAAOvE,EAAK2O,SAAUE,SAAUL,IAC/D,cAAC,SAAD,CAAOzP,KAAK,OAAOI,KAAK,QAAQoF,MAAOvE,EAAKjE,MAAOiT,YAAY,kHAAwBH,SAAUL,OAErG,mBAAG/L,UAAU,kDAAb,SAAgE3C,IAChE,oBAAG2C,UAAU,kDAAb,0GAAiF,cAAC,KAAD,CAAMZ,GAAG,SAAT,mDAIhG,E,0CCxCY+N,GAAgC,SAAC,GAA6B,IAA3BvN,EAA0B,EAA1BA,KAAMD,EAAoB,EAApBA,KAAMoC,EAAc,EAAdA,QAEhD1C,EAAaR,cAAbQ,SACF6K,EAAUC,cAEVtK,EAASC,mBAAQ,WACnB,OAAOT,EAASU,iBAAT,OAA2BH,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMG,cAC3C,GAAE,CAACV,EAAUO,IAERwN,EAAc3L,uBAAY,WAC5B,IAAK5B,EAAQ,CACT,GAAuB,oBAAZkC,EACP,OAAOA,IAEPmI,EAAQmD,KAAK,CAAEhO,SAAUO,EAAMjB,MAAO,CAAEW,KAAMD,IAErD,CACJ,GAAE,CAACQ,EAAQqK,EAAStK,EAAMmC,EAAS1C,IAEpC,OACI,wBAAQW,UAAWC,KAAOC,KAAM6B,QAASqL,EAAzC,SACI,mBAAGpN,UAAS,oCAA+BH,EAAS,GAAK,wBAAzD,SACKF,KAIhB,E,qBC7BY2N,GAA0B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtC,OACI,sBAAKvN,UAAWC,KAAOC,KAAvB,UACI,cAAC,GAAD,CAAmBN,KAAK,WAAWD,KAAK,+CACxC,cAAC,GAAD,CAAmBC,KAAK,kBAAkBD,KAAK,0FAC/C,cAAC,GAAD,CAAmBA,KAAK,iCAAQoC,QAASwL,IACzC,mBAAGvN,UAAU,gDAAb,oUAGX,E,qBCTYwN,GAAc,WACvB,MAAyC9O,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,QAAV,IAAlDtD,EAAR,EAAQA,QAAR,IAAiB8R,KAAOvP,EAAxB,EAAwBA,KAAMU,EAA9B,EAA8BA,MAExBqQ,EAAW3N,mBAAsB,iBAAO,CAACpD,KAAI,OAAEA,QAAF,IAAEA,IAAQ,GAAIU,MAAK,OAAEA,QAAF,IAAEA,IAAS,GAAI8O,SAAU,GAAxD,GAA8D,CAACxP,EAAMU,IAE5G,EAAwCuO,GAAQ8B,GAAzClQ,EAAP,EAAOA,KAAMwO,EAAb,EAAaA,aAAcD,EAA3B,EAA2BA,UAE3B,EAAgCD,oBAAS,GAAzC,mBAAOhB,EAAP,KAAiB6C,EAAjB,KAEM5O,EAAWC,KAEjBC,qBAAU,WACDyO,EAASvB,WACVuB,EAASvB,SAAW3O,EAAK2O,UAE7BwB,GAAavT,GAAWoD,EAAKb,OAAS+Q,EAAS/Q,MAAQa,EAAKH,QAAUqQ,EAASrQ,OAASG,EAAK2O,WAAauB,EAASvB,SACtH,GAAE,CAAC3O,EAAMkQ,EAAUtT,IAGpB,IAAMmR,EAAW7J,uBAAY,SAACoC,GAC1BA,EAAEC,UACFD,EAAEE,iBACFjF,EjC4D2B,SAACvB,GAChC,OAAO,SAACuB,GACJd,EAAiBT,GACZ0B,MAAK,SAAAxB,GAAQ,OAAIqB,EAAS,CAAExC,KAAM4B,EAAeT,YAApC,IACbyB,OAAM,SAAAnE,GAAK,OAAIL,QAAQI,OAAOC,EAAnB,GACnB,CACJ,CiClEgB4S,CAAUpQ,GACtB,GAAE,CAACA,EAAMuB,IAEJ8O,EAAUnM,uBAAY,SAACoC,GACzBA,EAAEC,UACFD,EAAEE,iBACF+H,EAAU,eAAI2B,GACjB,GAAE,CAACA,EAAU3B,IAEd,OACI,uBAAM9L,UAAWC,KAAOC,KAAMoL,SAAUA,EAAxC,UACI,cAAC,SAAD,CAAOhP,KAAK,OAAOI,KAAK,OAAOoF,MAAOvE,EAAKb,KAAM6P,YAAY,qBAAMH,SAAUL,IAC7E,cAAC,cAAD,CAAarP,KAAK,QAAQoF,MAAOvE,EAAKH,MAAOgP,SAAUL,IACvD,cAAC,iBAAD,CAAerP,KAAK,WAAWoF,MAAOvE,EAAK2O,SAAUE,SAAUL,KAC7DlB,GAAa,oCAAM,cAAC,UAAD,CAAQvO,KAAK,UAAUiO,KAAK,SAASM,SAAUA,EAA/C,oEACrB,cAAC,UAAD,CAAQvO,KAAK,YAAYiO,KAAK,SAASM,SAAUA,EAAU9I,QAAS6L,EAApE,uDAGX,EC/CYC,GAA6C,sBAC7CC,GAAiD,wBACjDC,GAA6C,sBAC7CC,GAA+C,uBAC/CC,GAAmC,iBAanCC,GAA6B,SAAC7T,GAAD,IAAc8T,EAAd,+DACtC,SAAArP,GACI,IAAIsP,EAAU/T,EACd,GAAI8T,EAAS,CAAC,IAAD,EACH7U,EAAK,UAAGC,aAAaC,QAAQ,gBAAxB,aAAG,EAA+B6U,MAAM,KAAK,GACxDD,GAAO,iBAAc9U,EACxB,CAEDwF,EAAS,CAAExC,KAAMuR,GAAqBO,WACzC,CATqC,EAmC7BE,GAAyB,CAClCC,QAASV,GACTW,OAjD8C,kBAkD9CC,OAAQ,SAACjE,GAAD,MAAY,CAAElO,KAAMwR,GAAuBM,QAAS5D,EAApD,EACRkE,QAAS,SAAClE,GAAD,MAAY,CAAElO,KAAMyR,GAAqBK,QAAS5D,EAAlD,EACTmE,UAAW,SAACnE,GACR,IAAQtO,EAASsO,EAATtO,KACR,MAAQ,CAAEI,KAAM2R,GAAgBG,QAASlS,EAC5C,EACD0S,QAAS,SAACpE,GAAD,MAAY,CAAElO,KAAM0R,GAAsBI,QAAS5D,EAAnD,G,wCCxDAqE,GAA6B,SAAC,GAAqB,IAAnB5L,EAAkB,EAAlBA,MAAO6L,EAAW,EAAXA,KAChD,OAAQ,qBAAK9O,UAAWC,KAAO8O,aAAvB,SACJ,qBAAK/O,UAAWC,KAAOkC,WAAYS,MAAO,CAAEiH,gBAAgB,OAAD,OAAS5G,EAAT,MAA3D,SACI,mBAAGjD,UAAU,8BAAb,SAA4C8O,OAGvD,ECFYE,GAAY,SAAC,GAAuB,IAAD,EAApB9R,EAAoB,EAApBA,MAClBF,EAAW,UAAG0B,IAAY,SAAAuQ,GAAK,OAAIA,EAAMjS,YAAYvE,KAAtB,WAApB,aAAG,EAA+C+K,QAAO,SAAA5K,GAAC,OAAIsE,EAAMF,YAAYkS,SAAStW,EAAEiK,IAAjC,IAE3E,EAAyB/C,mBAAQ,WAC7B,IAAMmC,EAAQjF,EAAY0N,OAC1B,OAAQzI,EANQ,EAOZ,CAAExJ,MAAOuE,EAAYmS,MAAM,EAPf,GAOoCC,MAAO,KAAOnN,EAPlD,GAO2EoN,YACrF,CAAE5W,MAAOuE,EAAaoS,MAAO,GACtC,GAAE,CAACpS,IALIvE,EAAR,EAAQA,MAAO2W,EAAf,EAAeA,MAOTE,EAAOxP,mBAAQ,kBAAM,IAAIyP,KAAKrS,EAAMsS,UAArB,GAAiC,CAACtS,EAAMsS,YACvDpM,EAAQtD,mBAAQ,WAAQ,OAAO9C,EAAcA,EAAYZ,KAAI,SAAAxD,GAAC,OAAI6W,OAAO7W,EAAEwK,MAAb,IAAqBiE,QAAO,SAACC,EAAKnM,GAAN,OAAYmM,EAAOnM,CAAnB,IAAwB,CAAG,GAAE,CAAC6B,IAC9H,OACI,sBAAKgD,UAAWC,KAAOC,KAAvB,UACI,sBAAKF,UAAWC,KAAOyP,QAAvB,UACI,oBAAG1P,UAAS,gCAAZ,cAAiD9C,EAAMD,UACvD,mBAAG+C,UAAS,kDAAZ,SAAkEsP,EAAKK,sBAE3E,mBAAG3P,UAAU,8BAAb,SAA4C9C,EAAMR,OAClD,sBAAKsD,UAAWC,KAAOyP,QAAvB,UACI,qBAAK1P,UAAWC,KAAOjD,YAAvB,SAEQvE,EAAM2D,KAAI,SAACxD,EAAGgX,GAAJ,OACN,qBAAK5P,UAAWC,KAAOR,KAAMmD,MAAO,CAAEiN,OAAO,GAAD,OAAK,IAAOD,IAAxD,SACI,cAAC,GAAD,CAAgB3M,MAAOrK,EAAEqK,MAAO6L,KAAMc,IAAQnX,EAAMiS,OAAS,EAAI0E,EAAQ,MAD7E,UAAyEQ,EAAzE,YAAgFhX,EAAEiK,KAD5E,MAOlB,oBAAG7C,UAAS,qCAAgCC,KAAOmD,OAAnD,UAA6DA,EAA7D,OAAyE,cAAC,gBAAD,CAAc9G,KAAK,oBAI3G,E,oBCvCYwT,GAAW,WACpB,IAAMC,EAAOrR,IAAY,SAAAC,GAAK,OAAIA,EAAMoR,IAAV,IACxBnR,EAAWC,cAEjB,OAAKkR,EAAK7T,KAAKjB,QAGP,qBAAK+E,UAAS,UAAKC,KAAOC,KAAZ,eAAd,SACH6P,EAAK7T,KAAK8T,OAAO5T,KAAI,SAAAc,GAAK,OACvB,cAAC,KAAD,CAAM8C,UAAWC,KAAOgQ,KACpB7Q,GAAI,CAAEC,SAAS,GAAD,OAAKT,EAASS,SAAd,YAA0BnC,EAAM2F,KAAOlE,MAAO,CAAEmE,WAAYlE,IAD9E,SAEI,cAAC,GAAD,CAAW1B,MAAOA,KAFaA,EAAM2F,IADlB,MAHpB,IASd,E,qBCZYqN,GAAgB,WAEzB,IAAMpR,EAAWC,KAOjB,OANAC,qBAAU,WAEN,OADAF,EAASoP,GAAiBrW,GAAe,IAClC,WAAQiH,EAAS,CAAExC,KAAM0R,IAAyB,CAE5D,GAAE,IAEK,qBAAKhO,UAAWC,KAAOC,KAAvB,SACJ,cAAC,GAAD,KAGP,ECdYiQ,GAAoB,SAAC,GAAwB,IAAtB3R,EAAqB,EAArBA,SAAUoB,EAAW,EAAXA,KACpCP,EAAaR,cAAbQ,SAIR,OAHgBS,mBAAQ,WACtB,OAAOT,EAAS+Q,sBAAwBxQ,EAAKwQ,mBAC9C,GAAE,CAAC/Q,EAAUO,IAIJ,mCACLpB,IAHI,IAMV,ECPY6R,GAAc,WACzB,IAAMvR,EAAWC,KAEXuR,EAAe7O,uBAAY,WAC/B3C,GxCoDO,SAACA,GACJA,EAAS,CAAExC,KAAM8B,IACjB,IAAM9E,EAAQC,aAAaC,QAAQ,gBACnC,GAAc,OAAVF,EACA,OAAOwF,EAAS,CAAExC,KAAMgC,IAE5BX,EAAcrE,GAAO2F,MAAK,YAAkB,IAAf5B,EAAc,EAAdA,QACzB9D,aAAagX,WAAW,SACxBhX,aAAagX,WAAW,gBACxBzR,EAAS,CAAExC,KAAM+B,EAAgBhB,WACpC,IAAE6B,OAAM,WACLJ,EAAS,CAAExC,KAAMgC,GACpB,GACJ,GwChEF,GAAE,CAACQ,IAEJ,OACE,sBAAKkB,UAAWC,KAAOC,KAAvB,UACE,cAAC,GAAD,CAAaqN,SAAU+C,IACvB,cAAC,GAAD,CAAO1Q,KAAK,WAAZ,SAAuB,cAAC,GAAD,MACvB,cAAC,GAAD,CAAOA,KAAK,kBAAZ,SAA8B,cAAC,GAAD,QAGnC,E,wCCnBK4Q,GAAmB,CACrB,CAAE9T,KAAM,sEAAgB+T,UAAW,YACnC,CAAE/T,KAAM,yCAAY+T,UAAW,YAC/B,CAAE/T,KAAM,mCAAW+T,UAAW,OAC9B,CAAE/T,KAAM,2DAAe+T,UAAW,kBAGzBC,GAAgC,WAEzC,IAAQ7X,EAAO8X,cAAP9X,GACFmE,EAAc0B,IAAY,SAAAuQ,GAAK,OAAIA,EAAMjS,YAAYvE,KAAtB,IAC/B0J,EAAarC,mBAAQ,WACvB,OAAO9C,EAAYT,MAAK,SAAAF,GAAC,OAAIA,EAAEwG,MAAQhK,CAAd,GAC5B,GAAE,CAACA,EAAImE,IACR,OAAKmF,EAID,sBAAKnC,UAAWC,KAAOC,KAAvB,UACI,qBAAK8C,IAAKb,EAAWyO,YAAa1N,IAAKf,EAAWzF,OAClD,mBAAGsD,UAAU,6BAAb,SAA2CmC,EAAWzF,OACtD,qBAAKsD,UAAWC,KAAO4Q,QAAvB,SACKL,GAAiBpU,KAAI,SAAAC,GAAC,OACnB,sBAAuB2D,UAAWC,KAAO6O,KAAzC,UACI,mBAAG9O,UAAS,4BAAZ,SAA4C3D,EAAEK,OAE9C,mBAAGsD,UAAS,6BAAZ,SAA6CmC,EAAW9F,EAAEoU,eAHpDpU,EAAEoU,UADO,SAPxB,IAiBd,ECnCYK,GAAiB,WAC5B,OACE,qBAAK9Q,UAAWC,KAAOC,KAAvB,SACE,sBAAKF,UAAS,oBAAeC,KAAO8Q,KAApC,UACE,oBAAI/Q,UAAS,oCAA+BC,KAAOyL,QAAnD,qHACA,cAAC,GAAD,QAIP,E,qBCTYsF,GAAkB,WAC3B,OACI,qBAAKhR,UAAWC,KAAOC,KAAvB,SACI,qBAAKF,UAAU,YAAf,SACI,mBAAGA,UAAU,4BAAb,yHAIf,E,oBCLYiR,GAAc,WACvB,IAAMtS,EAAQD,IAAY,SAAAC,GAAK,OAAIA,EAAMoR,IAAV,IAE/B,EAAsCjQ,mBAAQ,WAC1C,IAAKnB,EAAMuS,cAAgBvS,EAAMzC,KAAKjB,QAClC,MAAO,CAAC,EAAG,OAAGnC,OAAWA,GAE7B,IAAMqY,EAAiB,GACjBC,EAAoB,GAQ1B,OAPAzS,EAAMzC,KAAK8T,OAAOrX,SAAQ,SAAA0D,GCoEU,SDnE5BA,EAAExB,OACFsW,EAAK9D,KAAKhR,EAAEY,QAEZmU,EAAQ/D,KAAKhR,EAAEY,OAEtB,IACM,CAAC0B,EAAMzC,KAAKmV,WAAY1S,EAAMzC,KAAKoV,MAAOF,EAASD,EAC7D,GAAE,CAACxS,IAdJ,mBAAO4S,EAAP,KAAcD,EAAd,KAAqBF,EAArB,KAA8BD,EAA9B,KAeA,OACI,sBAAKnR,UAAWC,KAAOC,KAAvB,UACI,sBAAKF,UAAWC,KAAOuR,SAAvB,UACI,sBAAKxR,UAAWC,KAAOwR,WAAvB,UACI,mBAAGzR,UAAS,sCAAiCC,KAAOyR,aAApD,mDACA,qBAAK1R,UAAWC,KAAO0R,SAAvB,gBACIR,QADJ,IACIA,OADJ,EACIA,EAAM/U,KAAI,SAAAwV,GAAC,OAAK,mBAAW5R,UAAS,gCAApB,SAAwD4R,GAAhDA,EAAb,SAGnB,sBAAK5R,UAAWC,KAAO4R,YAAvB,UACI,mBAAG7R,UAAS,sCAAiCC,KAAOyR,aAApD,0DACA,qBAAK1R,UAAWC,KAAO6R,KAAvB,gBACIV,QADJ,IACIA,OADJ,EACIA,EAAShV,KAAI,SAAAwV,GAAC,OAAK,mBAAW5R,UAAS,gCAApB,SAAwD4R,GAAhDA,EAAb,YAI1B,sBAAK5R,UAAWC,KAAO8R,IAAvB,UACI,mBAAG/R,UAAS,uCAAkCC,KAAOyL,QAArD,oIACA,mBAAG1L,UAAS,8BAAZ,SAA8CsR,OAElD,sBAAKtR,UAAWC,KAAO8R,IAAvB,UACI,mBAAG/R,UAAS,sCAAiCC,KAAOyL,QAApD,6HACA,mBAAG1L,UAAS,8BAAZ,SAA8CuR,SAI7D,E,qBEzCYS,GAAW,WACpB,IAAMlT,EAAWC,KAOjB,OANAC,qBAAU,WAEN,OADAF,EAASoP,GAAiBpW,IACnB,WAAQgH,EAAS,CAAExC,KAAM0R,IAAyB,CAE5D,GAAE,IAEK,qCACJ,oBAAIhO,UAAS,gCAA2BC,KAAO+K,YAA/C,uFACA,cAAC,GAAD,IACA,cAAC,GAAD,MAEP,E,wCCCYiH,GAAe,WACxB,IAAQpZ,EAAO8X,cAAP9X,GACFqE,EAAQwB,IAAY,SAAAC,GAAK,OAAIA,EAAMoR,KAAK7T,KAAK8T,MAApB,IAA4BzT,MAAK,SAAAF,GAAC,OAAIA,EAAEwG,MAAQhK,CAAd,IAC3DmE,EAAc0B,IAAY,SAAAuQ,GAAK,OAAIA,EAAMjS,YAAYvE,KAAtB,IAChC+K,QAAO,SAAA5K,GAAC,OAAIsE,GAASA,EAAMF,YAAYT,MAAK,SAAA2V,GAAE,OAAIA,IAAOtZ,EAAEiK,GAAb,GAAtC,KAA4D,GACzE,IAAK3F,EACD,OAAO,KAEX,IAAMiV,EAvBI,SAACnV,GACX,IAAMsK,EAA0B,GAYhC,OAXAtK,EAAYrE,SAAQ,SAAAC,GAChB,IAAIwZ,EAAM9K,EAAI/K,MAAK,SAAA8V,GAAC,OAAIA,EAAEhQ,KAAKQ,MAAQjK,EAAEiK,GAArB,IACfuP,IACDA,EAAM,CAAE/P,KAAMzJ,EAAGqJ,MAAO,GACxBqF,EAAI+F,KAAK+E,IAEbA,EAAInQ,QACW,QAAXrJ,EAAE0D,MACF8V,EAAInQ,OAEX,IACMqF,CACV,CASkBgL,CAAMtV,GACfoG,EAAQ+O,EAAO/V,KAAI,SAAAiW,GAAC,OAAIA,EAAEhQ,KAAKe,MAAQiP,EAAEpQ,KAArB,IAA4BoF,QAAO,SAACC,EAAKiL,GAAN,OAAYjL,EAAOiL,CAAnB,IACvDjD,EAAO,IAAIC,KAAKrS,EAAMsS,WAC5B,OACI,sBAAKxP,UAAWC,KAAOC,KAAvB,UACI,qBAAKF,UAAWC,KAAOuR,SAAvB,SAAiC,oBAAGxR,UAAU,gCAAb,cAA+C9C,EAAMD,YACtF,sBAAK+C,UAAWC,KAAOuS,QAAvB,UACI,mBAAGxS,UAAU,8BAAb,SAA4C9C,EAAMR,OAC/B,SAAjBQ,EAAMrC,QAAsB,mBAAGmF,UAAS,oCAA+BC,KAAOkR,MAAlD,iEAElC,sBAAKnR,UAAWC,KAAOwS,SAAvB,UACI,mBAAGzS,UAAU,8BAAb,mDACA,qBAAKA,UAAWC,KAAOxH,MAAvB,SACK0Z,EAAO/V,KAAI,SAAAiW,GAAC,OAAK,sBAAKrS,UAAWC,KAAOkC,WAAvB,UACd,cAAC,GAAD,CAAgBc,MAAOoP,EAAEhQ,KAAKY,QAC9B,mBAAGjD,UAAS,8BAAZ,SAA8CqS,EAAEhQ,KAAK3F,OACrD,sBAAKsD,UAAWC,KAAOyS,UAAvB,UACI,oBAAG1S,UAAS,gCAAZ,UAAgDqS,EAAEpQ,MAAlD,IAA0DoQ,EAAEhQ,KAAKe,MAAjE,UACA,cAAC,gBAAD,CAAc9G,KAAK,iBAL+B+V,EAAEhQ,KAAKQ,IAApD,SAUrB,sBAAK7C,UAAWC,KAAO0S,QAAvB,UACI,mBAAG3S,UAAS,oCAA+BC,KAAO2S,MAAlD,SAA2DtD,EAAKK,mBAChE,sBAAK3P,UAAWC,KAAOyS,UAAvB,UACI,oBAAG1S,UAAS,gCAAZ,UAAgDoD,EAAhD,UACA,cAAC,gBAAD,CAAc9G,KAAK,oBAItC,ECpDYuW,GAAe,SAAC,GAAgC,IAAD,IAA7B7C,cAA6B,SAClD8C,EAAKpU,IAAY,SAAAC,GAAK,OAAIA,EAAMoR,IAAV,IAEtBjR,EAAWC,KAcjB,OAbAC,qBAAU,WASN,OARK8T,EAAG5B,aAAgB4B,EAAG5W,KAAKjB,SAExB6D,EADAkR,EACS9B,GAAiBrW,GAAe,GAEhCqW,GAAiBpW,IAI3B,WAAQgH,EAAS,CAAExC,KAAM0R,IAAyB,CAE5D,GAAE,IAEK,qBAAKhO,UAAWC,KAAOC,KAAvB,SACJ,qBAAKF,UAAS,oBAAeC,KAAO8Q,KAApC,SACI,cAAC,GAAD,OAGX,EC3BYgC,GAAgB,WACzB,IAKW,IALLnU,EAAWC,cACjB,EAAwBgN,oBAAS,GAAjC,mBAAOxB,EAAP,KAAa2I,EAAb,KACMC,EAAgBxR,uBAAY,WAC9BuR,GAAQ,EACX,GAAE,CAACA,IACJ,OAAK3I,EAKD,8BACI,cAAC,GAAD,CAAOpB,WAAW,IAAIf,UAAWmC,EAAMlC,OAAQ8K,EAA/C,SACI,cAAC,GAAD,QALA,cAAC,IAAD,CAAU7T,GAAE,UAAER,EAASD,aAAX,iBAAE,EAAgBmE,kBAAlB,aAAE,EAA4BzD,UASzD,EChBY6T,GAAkB,WAC3B,IAKW,EALLtU,EAAWC,cACjB,EAAwBgN,oBAAS,GAAjC,mBAAOxB,EAAP,KAAa2I,EAAb,KACMC,EAAgBxR,uBAAY,WAC9BuR,GAAQ,EACX,GAAE,CAACA,IACJ,OAAK3I,EAID,8BACI,cAAC,GAAD,CAAOpB,WAAW,0GAAqBf,UAAWmC,EAAMlC,OAAQ8K,EAAhE,SACI,cAAC,GAAD,QALA,cAAC,IAAD,CAAU7T,IAAY,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUD,aAAV,eAAiBW,OAAQ,KAStD,E,oBChBY6T,GAAmB,WAC5B,IAAMC,EAAU1U,IAAY,SAAAC,GAAK,OAAIA,EAAMlB,SAAStD,SAAWwE,EAAM3B,YAAY7C,SAAWwE,EAAM+K,aAAavP,SAAWwE,EAAMiO,cAAczS,SAAWwE,EAAMoR,KAAK5V,OAAnI,IAEjC,OAAOiZ,EAAUvK,IAASC,aACtB,cAAC,IAAMC,SAAP,UACA,qBAAK/I,UAAWC,KAAOC,KAAM0C,MAAO,CAACwQ,QAASA,EAAU,OAAS,QAAjE,SACI,sBAAKpT,UAAWC,KAAO,cAAvB,UAAsC,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,+BAEpGyI,SAASU,eAAe,iBAC7C,IACL,ECgEciK,GA3DH,WACV,IAAMrW,EAAc0B,IAAY,SAAAuQ,GAAK,OAAIA,EAAMjS,YAAYvE,KAAtB,IAC/BqG,EAAWC,KACXH,EAAWC,cAEXiE,EAAalE,EAASD,OAASC,EAASD,MAAMmE,WAQpD,OANA9D,qBAAU,WACHhC,GAAsC,IAAvBA,EAAY0N,QAC9B5L,G/CRK,SAACA,GACJA,EAAS,CAAExC,KAAMoE,KACjBzE,IAAqBgD,MAAK,YAAgC,IAAD,mBAA7BjC,EAA6B,KAAhBsW,EAAgB,KACrDxU,EAAS,CAAExC,KAAMqE,GAAyB3D,cAAasW,cAC1D,IAAEpU,OAAM,WACLJ,EAAS,CAAExC,KAAMsE,IACpB,GACJ,G+CGF,GAAE,CAAC5D,EAAa8B,IAGf,sBAAKkB,UAAU,YAAf,UACE,cAAC,GAAD,IACA,eAAC,IAAD,CAAQpB,SAAUkE,GAAclE,EAAhC,UACE,cAAC,GAAD,CAAmBgB,KAAK,SAAS2T,OAAO,EAAxC,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAmB3T,KAAK,YAAY2T,OAAO,EAA3C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAmB3T,KAAK,mBAAmB2T,OAAO,EAAlD,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAmB3T,KAAK,kBAAkB2T,OAAO,EAAjD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO3T,KAAK,IAAI2T,OAAO,EAAvB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO3T,KAAK,QAAQ2T,OAAO,EAA3B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAO3T,KAAK,YAAY2T,OAAO,EAA/B,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgB3T,KAAK,sBAAsB2T,OAAO,EAAlD,SACE,cAAC,GAAD,CAAcvD,QAAQ,MAExB,cAAC,GAAD,CAAgBpQ,KAAK,WAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAmB2T,OAAO,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,SAGHzQ,GAAc,cAAC,IAAD,CAAOlD,KAAK,mBAAmBpB,SAAU,cAAC,GAAD,MACvDsE,GAAc,cAAC,IAAD,CAAOlD,KAAK,YAAYpB,SAAU,cAAC,GAAD,MAChDsE,GAAc,cAAC,IAAD,CAAOlD,KAAK,sBAAsBpB,SAAU,cAAC,GAAD,MAC3D,cAAC,GAAD,MAGL,EC7DYgV,GAAwC,CACjD/a,MAAO,GACP0D,KAAM,GACNkF,UAAW,MACXlH,SAAS,EACTsZ,QAAQ,GCNCC,GACb,CACIlb,IAAK,GAAIC,MAAO,GAAI2K,MAAO,EAAG1K,QAAS,CAAC,GCF/Bib,GACb,CACI1W,OAAQ,GACRP,KAAM,GACNvC,SAAS,EACTsZ,QAAQ,EACRpJ,MAAM,GCTGuJ,GACb,CACIvW,QAAS,GACTwP,KAAM,GACN1S,SAAS,EACTsZ,QAAQ,GCDCI,GAAmC,CAC5C1Z,SAAS,EACTc,SAAS,EACTgR,KAAM,CACF7O,MAAO,GACPV,KAAM,KCVDoX,GAA2B,CACtC5C,aAAa,EACb/W,SAAS,EACT+B,KAAM,CACJjB,SAAS,EACT+U,OAAQ,GACRsB,MAAO,EACPD,WAAY,ICFH0C,GAAcC,YAAgB,CACvChX,YNO8B,WAA8D,IAA7D2B,EAA4D,uDAApD6U,GAAoBS,EAAgC,uCAC3F,OAAQA,EAAO3X,MACX,KAAKoE,GACD,OAAO,2BACA/B,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,IAEhB,KAAK9S,GACD,OAAO,2BACAhC,GADP,IAEIlG,MAAOwb,EAAOjX,YACdb,KAAM8X,EAAOX,WACbnZ,SAAS,EACTsZ,QAAQ,IAEhB,KAAK7S,GACD,OAAO,2BACAjC,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,IAEhB,KAAK5S,GACD,OAAO,2BACAlC,GADP,IAEI0C,UAAW4S,EAAOpU,SAE1B,QACI,OAAOlB,EAElB,EMpCG4E,YLC8B,WAA8D,IAA7D5E,EAA4D,uDAApD+U,GAAoBO,EAAgC,uCAC3F,OAAQA,EAAO3X,MACX,KAAKsI,GACD,OAAO,2BACAjG,GADP,IAEInG,IAAKyb,EAAOzb,IACZC,MAAOwb,EAAOxb,MACdC,QAASH,EAAuB0b,EAAOzb,IAAKyb,EAAOxb,SAE3D,KAAKqM,GACD,OAAO,2BACAnG,GADP,IAEIlG,MAAOwb,EAAOxb,QAEtB,KAAKsM,GACD,OAAO2O,GACX,KAAK7O,GACD,OAAO,2BACAlG,GADP,IAEIyE,MAAO6Q,EAAO7Q,QAEtB,QACI,OAAOzE,EAElB,EKxBG+K,aJK+B,WAAgE,IAA/D/K,EAA8D,uDAAtDgV,GAAqBM,EAAiC,uCAC9F,OAAQA,EAAO3X,MACX,KAAK+M,GACD,OAAO,2BACA1K,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,IAEhB,KAAKnK,GACD,OAAO,2BACA3K,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,EACRxW,OAAQgX,EAAOhX,OACfP,KAAMuX,EAAOvX,KACb2N,MAAM,IAEd,KAAKd,GACD,OAAO,2BACA5K,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,IAEhB,KAAKjK,GACD,OAAO,2BACA7K,GADP,IAEI0L,MAAM,IAEd,QACI,OAAO1L,EAElB,EInCGiO,cHAgC,WAAkE,IAAjEjO,EAAgE,uDAAxDiV,GAAsBK,EAAkC,uCACjG,OAAQA,EAAO3X,MACX,KAAKkQ,GACD,OAAO,2BACA7N,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,IAEhB,KAAKhH,GACD,OAAO,2BACA9N,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,EACRpW,QAAS4W,EAAO5W,QAChBwP,KAAMoH,EAAOlH,gBAErB,KAAKL,GACD,OAAO,2BACA/N,GADP,IAEIxE,SAAS,EACTsZ,QAAQ,EACRpW,QAAS4W,EAAOlZ,MAChB8R,KAAMoH,EAAOjH,eAErB,QACI,OAAOrO,EAElB,EG1BGlB,SFI2B,WAAyD,IAAxDkB,EAAuD,uDAA/CkV,GAAkBI,EAA6B,uCACnF,OAAQA,EAAO3X,MACX,KAAK2B,EAAe,OAAO,2BACpBU,GADa,IAEhBxE,SAAS,IAEb,KAAK+D,EACD,OAAO,2BACAS,GADP,IAEIxE,SAAS,EACTc,QAASgZ,EAAOxW,SAASxC,QACzBgR,KAAMgI,EAAOxW,SAASwO,OAE5B,KAAK9N,EAAc,OAAO,2BACrBQ,GADc,IAEjBxE,SAAS,IAEb,KAAKiE,EAAgB,OAAO,2BACrBO,GADc,IAEjBxE,SAAS,IAEb,KAAKkE,EACD,OAAOwV,GAEX,KAAKvV,EAAe,OAAO,2BACpBK,GADa,IAEhBxE,SAAS,IAEb,QACI,OAAOwE,EAGlB,EEnCGoR,KDAqB,WAAyE,IAAxEpR,EAAuE,uDAA/DmV,GAAgBG,EAA+C,uCAC/F,OAAQA,EAAO3X,MACb,KAAKuR,GACH,OAAO,2BACFlP,GADL,IAEExE,SAAS,IAIb,KAAK2T,GACH,OAAO,2BACFnP,GADL,IAEE5D,WAAOjC,EACPqB,SAAS,EACT+W,aAAa,IAKjB,KAAKnD,GACH,OAAO,2BACFpP,GADL,IAEExE,SAAS,EACTY,MAAOkZ,EAAO7F,QACd8C,aAAa,IAKjB,KAAKlD,GACH,OAAO,2BACFrP,GADL,IAEE5D,WAAOjC,EACPoY,aAAa,IAMjB,KAAKjD,GAAiB,IAAD,IACb5Q,EAAsChC,KAAK6Y,MAAMD,EAAO7F,SAC9D,OAAO,2BACFzP,GADL,IAEE5D,WAAOjC,EACPoD,KAAK,2BACAmB,GADD,IAEF2S,OAAM,oBAAE3S,EAAQ2S,cAAV,aAAE,EAAgB5T,KAAI,SAAAC,GAAC,kCAAUA,GAAV,IAAaY,OAAQ9E,EAAekE,EAAEY,SAAtC,WAAvB,QAA4E,OAIxF,QACE,OAAO0B,EAEZ,I,UExDKwV,IAFmBC,OAAOC,sCAAwCC,KAEtCC,YAAgBC,KCdlB,SAAClG,GAC/B,OAAQ,SAACW,GACP,IAAIwF,EAA2B,KAE/B,OAAO,SAAAC,GAAI,OAAI,SAACT,GACd,IAAQnV,EAAamQ,EAAbnQ,SACAxC,EAAkB2X,EAAlB3X,KAAM8R,EAAY6F,EAAZ7F,QAOd,GALI9R,IAASgS,EAAUC,UAErBkG,EAAS,IAAIE,UAAUvG,IAGrBqG,IAGFA,EAAOG,OAAS,SAAApK,GACd1L,EAASwP,EAAUG,OAAOjE,GAC3B,EAGDiK,EAAOI,QAAU,SAAArK,GACf1L,EAASwP,EAAUI,QAAQlE,GAC5B,EAGDiK,EAAOK,UAAY,SAAAtK,GACjB1L,EAASwP,EAAUK,UAAUnE,GAC9B,EAEDiK,EAAOM,QAAU,SAAAvK,GACf1L,EAASwP,EAAUM,QAAQpE,GAC5B,EAEGlO,IAASgS,EAAUE,QAAQ,CAC7B,IAAMnR,EAAU+Q,EAEhBqG,EAAOO,KAAK3Z,KAAKC,UAAU+B,GAC5B,CAGHqX,EAAKT,EACN,CAtCU,CAuCZ,CACF,CD9BwDgB,CAAiB3G,MAEpEW,GAAQiG,YAAYnB,GAAaI,IAa1BpV,GAAc,kBAAMoW,aAAN,EAGdzW,GAA+C0W,IAE5DvM,IAAS1J,OACP,cAAC,IAAMkW,WAAP,UACE,cAAC,IAAD,CAAUpG,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAQqG,SAAUC,gBAAlB,SACE,cAAC,GAAD,UAIN7M,SAASU,eAAe,Q,qBE/C1BzR,EAAOC,QAAU,CAAC,KAAO,4BAA4B,IAAM,2BAA2B,SAAW,yDAAyD,QAAU,wDAAwD,KAAO,4BAA4B,SAAW,yDAAyD,MAAQ,qDAAqD,WAAa,kCAAkC,QAAU,wDAAwD,UAAY,iCAAiC,KAAO,4B,qBCAriBD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,YAAc,gCAAgC,MAAQ,0BAA0B,KAAO,yB,qBCA/KD,EAAOC,QAAU,CAAC,KAAO,sCAAsC,QAAU,yCAAyC,OAAS,wCAAwC,UAAY,2CAA2C,YAAc,6C,qBCAxOD,EAAOC,QAAU,CAAC,IAAM,wBAAwB,UAAY,8BAA8B,WAAa,2DAA2D,SAAW,6B,qBCA7KD,EAAOC,QAAU,CAAC,KAAO,gCAAgC,YAAc,uCAAuC,YAAc,uCAAuC,OAAS,kC,qBCA5KD,EAAOC,QAAU,CAAC,KAAO,sCAAsC,aAAe,8CAA8C,YAAc,6CAA6C,YAAc,6C,qBCArMD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,YAAc,2BAA2B,YAAc,2BAA2B,aAAe,4B,qBCA9ID,EAAOC,QAAU,CAAC,KAAO,yD,qBCAzBD,EAAOC,QAAU,CAAC,KAAO,sCAAsC,kBAAoB,mDAAmD,gBAAkB,iD,qBCAxJD,EAAOC,QAAU,CAAC,KAAO,wCAAwC,YAAc,+CAA+C,cAAgB,iD,qBCA9ID,EAAOC,QAAU,CAAC,KAAO,6CAA6C,cAAgB,sDAAsD,QAAU,gD,qBCAtJD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,cAAgB,mC,qBCAxGD,EAAOC,QAAU,CAAC,KAAO,mDAAmD,IAAM,wBAAwB,OAAS,2B,qBCAnHD,EAAOC,QAAU,CAAC,KAAO,+CAA+C,QAAU,kDAAkD,KAAO,+C,qBCA3ID,EAAOC,QAAU,CAAC,KAAO,0CAA0C,YAAc,iD,qBCAjFD,EAAOC,QAAU,CAAC,aAAe,sCAAsC,WAAa,oC,qBCApFD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wB,qBCAxDD,EAAOC,QAAU,CAAC,KAAO,kDAAkD,IAAM,uBAAuB,OAAS,0B,qBCAjHD,EAAOC,QAAU,CAAC,KAAO,4BAA4B,aAAa,kC","file":"static/js/main.b8b03600.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"staticText\":\"home_staticText__2E7jj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients_main__3x3CC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients-tabs_main__4ggmU\",\"tab\":\"burger-ingredients-tabs_tab__3o2gE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients-box_main__1PVLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"counter_main__3VVDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor_main__1WTvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"modal-overlay_main__35GhD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1E5z1 index_content-grid__BhKkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"register_main__2oJje index_content-grid__BhKkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile_main__312h1 index_content-grid__BhKkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-menu-button_main__2erXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-menu_main__2U2Tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-home_main__2be0T index_form-area__1zazM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-orders_main__1vPQx index_orders-area__ftpLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"not-found-404_main__30wrt index_content-grid__BhKkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"staticText\":\"feed_staticText__eq-ie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-summary_main__3o5Jf\",\"row\":\"feed-summary_row__1Sw1n\",\"firstRow\":\"feed-summary_firstRow__1DnJ8 feed-summary_row__1Sw1n\",\"leftColumn\":\"feed-summary_leftColumn__1V__I\",\"rightColumn\":\"feed-summary_rightColumn__1vfCm\",\"header\":\"feed-summary_header__1m2ey\",\"firstHeader\":\"feed-summary_firstHeader__2EBFB feed-summary_header__1m2ey\",\"nums\":\"feed-summary_nums__3lrdp\",\"leftNums\":\"feed-summary_leftNums__1pOYT feed-summary_nums__3lrdp\"};","\r\nexport const BASE_URL: string = 'https://norma.nomoreparties.space/api';\r\nexport const WS_ORDERS_URL: string = 'wss://norma.nomoreparties.space/orders';\r\nexport const WS_FEED_URL: string = WS_ORDERS_URL + '/all';\r\nexport const INGREDIENTS_ENDPOINT = '/ingredients';\r\nexport const ORDER_REQUEST_ENDPOINT = '/orders';\r\nexport const PASSWORD_RESET_ENDPOINT = '/password-reset';\r\nexport const PASSWORD_SET_ENDPOINT = '/password-reset/reset';\r\nexport const LOGIN_ENDPOINT = '/auth/login';\r\nexport const REGISTER_ENDPOINT = '/auth/register';\r\nexport const LOGOUT_ENDPOINT = '/auth/logout';\r\nexport const REFRESH_TOKEN_ENDPOINT = '/auth/token';\r\nexport const USER_ENDPOINT = '/auth/user';\r\n\r\n\r\nexport const RESET_PASSWORD_STEP_RECOVER = 'RESET_PASSWORD_STEP_RECOVER';\r\nexport const RESET_PASSWORD_STEP_RESET = 'RESET_PASSWORD_STEP_RESET';\r\nexport const RESET_PASSWORD_STEP_LOGIN = 'RESET_PASSWORD_STEP_LOGIN';\r\n\r\n\r\n","import { IConstructorCounter, IConstructorItem } from \"./types\";\r\n\r\nexport const padOrderNumber = (num: number): string => {\r\n    return String(num).padStart(6, '0');\r\n}\r\n\r\nexport const calcConstructorCounter = (bun: string, items: IConstructorItem[]): IConstructorCounter => {\r\n    let counter: IConstructorCounter = {};\r\n    if (bun) {\r\n        counter[bun] = 2;\r\n    }\r\n    items.forEach(i => {\r\n        const id = i.id;\r\n        if (counter[id] === undefined) {\r\n            counter[id] = 1;\r\n        } else {\r\n            counter[id]++;\r\n        }\r\n    })\r\n    return counter;\r\n}\r\n","import {\r\n    BASE_URL,\r\n    INGREDIENTS_ENDPOINT,\r\n    ORDER_REQUEST_ENDPOINT,\r\n    PASSWORD_RESET_ENDPOINT,\r\n    PASSWORD_SET_ENDPOINT,\r\n    LOGIN_ENDPOINT,\r\n    REGISTER_ENDPOINT,\r\n    LOGOUT_ENDPOINT,\r\n    REFRESH_TOKEN_ENDPOINT,\r\n    USER_ENDPOINT\r\n} from './constants';\r\nimport {\r\n    IIngredient,\r\n    IIngredientCategory,\r\n    IProfileForm,\r\n    IResetPasswordForm,\r\n    TIngredientName,\r\n    TIngredientType,\r\n    ILoginForm,\r\n    IAuthToken,\r\n    IAuthResponse,\r\n    ILogoutResponse\r\n} from './types';\r\nimport { padOrderNumber } from './utils';\r\n\r\n\r\ntype TRequestParams = {\r\n    method: 'GET' | 'POST' | 'PATCH';\r\n    headers: {\r\n        [header: string]: string;\r\n    };\r\n    body?: string;\r\n};\r\n\r\ntype TRequestParamsBuilder = () => TRequestParams;\r\n\r\nconst getRequestParams: TRequestParams = {\r\n    method: 'GET',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'OPTIONS, GET, POST, PUT, PATCH, DELETE'\r\n    }\r\n};\r\n\r\nconst postRequestParams: TRequestParams = {\r\n    ...getRequestParams,\r\n    method: 'POST'\r\n};\r\n\r\nconst patchRequestParams: TRequestParams = {\r\n    ...getRequestParams,\r\n    method: 'PATCH'\r\n};\r\n\r\nexport type TResponseBoty<T> = { success: boolean } & T;\r\n\r\n\r\nconst securedRequestParams = (initParams: TRequestParams): TRequestParams => {\r\n    const token = localStorage.getItem('token');\r\n    let params = {\r\n        ...initParams,\r\n        mode: 'cors',\r\n        cache: 'no-cache',\r\n        credentials: 'same-origin',\r\n        redirect: 'follow',\r\n        referrerPolicy: 'no-referrer',\r\n    };\r\n    if (token) {\r\n        params = {\r\n            ...params,\r\n            headers: {\r\n                ...params.headers,\r\n                Authorization: token\r\n            }\r\n        };\r\n    }\r\n    return params;\r\n};\r\n\r\nconst securedPostRequestParams = () => securedRequestParams(postRequestParams);\r\nconst securedGetRequestParams = () => securedRequestParams(getRequestParams);\r\nconst securedPatchRequestParams = () => securedRequestParams(patchRequestParams);\r\n\r\nconst request = async <T>(endopoint: string, initParams: TRequestParams): Promise<[json: TResponseBoty<T>, headers: Headers]> => {\r\n    const url = BASE_URL + endopoint;\r\n    try {\r\n        const response = await fetch(url, initParams);\r\n        if (response.ok) {\r\n            const json = (await response.json()) as TResponseBoty<T>;\r\n            return Promise.resolve([json, response.headers]);\r\n        } else {\r\n            throw new Error(`статус ${response.status}`);\r\n        }\r\n    }\r\n    catch (error) {\r\n        return Promise.reject([false, { error }]);\r\n    }\r\n};\r\n\r\nconst checkResult = (success: boolean): void => {\r\n    if (!success) {\r\n        throw Error(`Сервер вернул отрицательный результат`);\r\n    }\r\n};\r\n\r\nconst buildParams = <T>(params: TRequestParams | TRequestParamsBuilder, body: T | null = null): TRequestParams => {\r\n    let p: TRequestParams;\r\n    if (typeof params === 'function') {\r\n        p = params();\r\n    } else {\r\n        p = params;\r\n    }\r\n\r\n    if (body) {\r\n        return { ...p, body: JSON.stringify(body) };\r\n    }\r\n    else {\r\n        return { ...p };\r\n    }\r\n};\r\n\r\nconst makeRequest = async <T>(endpoint: string, params: TRequestParams, parseHeaders: ((headers: Headers) => void) | undefined = undefined): Promise<T> => {\r\n    try {\r\n        const [json, headers] = await request<T>(endpoint, params);\r\n        checkResult(json.success);\r\n        console.log('Запрос выполнен:', endpoint, params, headers, json);\r\n        if (typeof parseHeaders === 'function') {\r\n            parseHeaders(headers);\r\n        }\r\n        return Promise.resolve(json);\r\n    } catch (error) {\r\n        console.log('Запрос завершен с ошибкой', endpoint, params, error);\r\n        return Promise.reject(error);\r\n    }\r\n};\r\n\r\nconst makeSecuredRequest = async <T>(endpoint: string, params: TRequestParams, parseHeaders: ((headers: Headers) => void) | undefined = undefined): Promise<T> => {\r\n    try {\r\n        const result = await makeRequest<T>(endpoint, params, parseHeaders);\r\n        return Promise.resolve<T>(result);\r\n    } catch (error) {\r\n        const success = await requestRefreshToken();\r\n        if (success) {\r\n            const result = await makeRequest<T>(endpoint, params, parseHeaders);\r\n            return Promise.resolve<T>(result);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n};\r\n\r\nexport const mapIngredientCategoryName = (category: TIngredientType): TIngredientName => {\r\n    switch (category) {\r\n        case 'bun':\r\n            return 'Булки';\r\n        case 'main':\r\n            return 'Начинки';\r\n        case 'sauce':\r\n            return 'Соусы';\r\n    };\r\n};\r\n\r\nexport const requestIngredients = async () => {\r\n    const { data } = await makeRequest<{ data: IIngredient[] }>(INGREDIENTS_ENDPOINT, getRequestParams);\r\n    const cats: IIngredientCategory[] = [];\r\n    data.map(o => o.type).forEach(type => {\r\n\r\n        if (!cats.find(c => c.type === type)) {\r\n            cats.splice(0, 0, { type, name: mapIngredientCategoryName(type) });\r\n        }\r\n    });\r\n    return Promise.resolve<[IIngredient[], IIngredientCategory[]]>([data, cats.sort((l, r) => l.type.localeCompare(r.type))]);\r\n};\r\n\r\nexport const requestOrder = async (ingredients: string[]) => {\r\n    const token = localStorage.getItem('refreshToken');\r\n    if (!token) {\r\n        return Promise.reject();\r\n    }\r\n    const { name, order: { number } } = await makeSecuredRequest<{ name: string, order: { number: number } }>(ORDER_REQUEST_ENDPOINT,\r\n        buildParams(securedPostRequestParams, { token, ingredients }));\r\n    return Promise.resolve({ name, number: padOrderNumber(number) });\r\n};\r\n\r\nexport const requestPasswordReset = async (email: string) => {\r\n    const { message } = await makeRequest<{ message: string }>(PASSWORD_RESET_ENDPOINT,\r\n        buildParams(postRequestParams, { email }));\r\n    return Promise.resolve({ message });\r\n};\r\n\r\nexport const requestPasswordSet = async (form: IResetPasswordForm) => {\r\n    const { message } = await makeRequest<{ message: string }>(PASSWORD_SET_ENDPOINT,\r\n        buildParams(postRequestParams, form));\r\n    return Promise.resolve({ message });\r\n};\r\n\r\nexport const requestRegister = async (form: IProfileForm) => {\r\n    const authInfo = await makeRequest<IAuthResponse>(REGISTER_ENDPOINT,\r\n        buildParams(postRequestParams, form));\r\n    return Promise.resolve(authInfo);\r\n};\r\n\r\nexport const requestLogin = async (form: ILoginForm) => {\r\n    const authInfo = await makeRequest<IAuthResponse>(LOGIN_ENDPOINT,\r\n        buildParams(postRequestParams, form));\r\n    return Promise.resolve(authInfo);\r\n};\r\n\r\nexport const requestLogout = async (token: string) => {\r\n    const { message } = await makeRequest<ILogoutResponse>(LOGOUT_ENDPOINT,\r\n        buildParams(securedPostRequestParams, { token }));\r\n    return Promise.resolve({ message });\r\n};\r\n\r\nexport const requestRefreshToken = async () => {\r\n    const token = localStorage.getItem('refreshToken');\r\n    if (!token) {\r\n        return Promise.resolve(false);\r\n    }\r\n    const data = await makeRequest<IAuthToken>(REFRESH_TOKEN_ENDPOINT,\r\n        buildParams(securedPostRequestParams, { token }));\r\n\r\n    localStorage.setItem('token', data.accessToken);\r\n    localStorage.setItem('refreshToken', data.refreshToken);\r\n\r\n    return Promise.resolve(true);\r\n};\r\n\r\nexport const requestGetUser = async () => {\r\n    try {\r\n        const authInfo = await makeRequest<IAuthResponse>(USER_ENDPOINT, buildParams(securedGetRequestParams));\r\n        return Promise.resolve(authInfo);\r\n    } catch (error) {\r\n        console.log('не удалось восстановить контекст', error);\r\n        return Promise.reject(error);\r\n    }\r\n};\r\n\r\nexport const requestPatchUser = async (form: IProfileForm) => {\r\n    const authInfo = await makeRequest<IAuthResponse>(USER_ENDPOINT,\r\n        buildParams(securedPatchRequestParams, form));\r\n    return Promise.resolve(authInfo);\r\n};\r\n","import { requestPatchUser, requestLogin, requestLogout, requestRefreshToken, requestRegister, requestGetUser } from \"../../utils/request\";\r\nimport { AppDispatch, AppThunk, IBasicAction, ILoginForm, IProfileForm, IAuthResponse } from \"../../utils/types\";\r\n\r\nexport const LOGIN_REQUEST: 'LOGIN_REQUEST' = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS: 'LOGIN_SUCCESS' = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILED: 'LOGIN_FAILED' = 'LOGIN_FAILED';\r\n\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\r\n\r\ninterface ILoginRequestAction extends IBasicAction<typeof LOGIN_REQUEST> { };\r\ninterface ILoginSuccessAction extends IBasicAction<typeof LOGIN_SUCCESS> {\r\n    authInfo: IAuthResponse;\r\n};\r\ninterface ILoginFailedAction extends IBasicAction<typeof LOGIN_FAILED> { };\r\n\r\ninterface ILogoutRequestAction extends IBasicAction<typeof LOGOUT_REQUEST> { };\r\ninterface ILogoutSuccessAction extends IBasicAction<typeof LOGOUT_SUCCESS> {\r\n    message: string;\r\n};\r\ninterface ILogoutFailedAction extends IBasicAction<typeof LOGOUT_FAILED> { };\r\n\r\nexport type TAuthInfoActions = ILoginRequestAction | ILoginSuccessAction | ILoginFailedAction\r\n    | ILogoutRequestAction | ILogoutSuccessAction | ILogoutFailedAction;\r\n\r\n\r\n\r\nexport const register: AppThunk = (form: IProfileForm) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n        requestRegister(form).then((authInfo) => {\r\n            localStorage.setItem('token', authInfo.accessToken);\r\n            localStorage.setItem('refreshToken', authInfo.refreshToken);\r\n            dispatch({ type: LOGIN_SUCCESS, authInfo });\r\n        }).catch(() => {\r\n            dispatch({ type: LOGIN_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\nexport const login: AppThunk = (form: ILoginForm) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n        requestLogin(form).then(authInfo => {\r\n            localStorage.setItem('token', authInfo.accessToken);\r\n            localStorage.setItem('refreshToken', authInfo.refreshToken);\r\n            dispatch({ type: LOGIN_SUCCESS, authInfo });\r\n        }).catch(() => {\r\n            dispatch({ type: LOGIN_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\nexport const tokenLogin: AppThunk = () => {\r\n    return (dispatch: AppDispatch) => {\r\n        requestRefreshToken().then(() => {\r\n            requestGetUser().then(authInfo => {\r\n                dispatch({ type: LOGIN_SUCCESS, authInfo });\r\n            })\r\n        }).catch(() => {\r\n            dispatch({ type: LOGIN_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\nexport const logout: AppThunk = () => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: LOGOUT_REQUEST });\r\n        const token = localStorage.getItem('refreshToken');\r\n        if (token === null) {\r\n            return dispatch({ type: LOGOUT_FAILED });\r\n        }\r\n        requestLogout(token).then(({ message }) => {\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('refreshToken');\r\n            dispatch({ type: LOGOUT_SUCCESS, message });\r\n        }).catch(() => {\r\n            dispatch({ type: LOGOUT_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\nexport const getUser: AppThunk = () => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: LOGIN_REQUEST });\r\n        requestGetUser()\r\n            .then(authInfo => dispatch({ type: LOGIN_SUCCESS, authInfo }))\r\n            .catch(error => Promise.reject(error));\r\n    }\r\n}\r\nexport const patchUser: AppThunk = (form: IProfileForm) => {\r\n    return (dispatch: AppDispatch) => {\r\n        requestPatchUser(form)\r\n            .then(authInfo => dispatch({ type: LOGIN_SUCCESS, authInfo }))\r\n            .catch(error => Promise.reject(error));\r\n    }\r\n}\r\n","import { FC, useEffect } from 'react';\r\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\r\nimport { requestRefreshToken, requestGetUser } from '../../utils/request';\r\nimport { LOGIN_SUCCESS, LOGIN_FAILED } from '../../services/actions/auth-info';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n    \r\n    const {request, success} = useSelector(state => state.authInfo);\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!success) {\r\n            requestRefreshToken().then(() => {\r\n                requestGetUser().then(authInfo => {\r\n                    dispatch({ type: LOGIN_SUCCESS, authInfo });\r\n                }).catch(() => {\r\n                    dispatch({ type: LOGIN_FAILED });\r\n                })\r\n            }).catch(() => {\r\n                dispatch({ type: LOGIN_FAILED });\r\n            })\r\n        };\r\n        // eslint-disable-next-line        \r\n    }, []);\r\n\r\n    if (request) {\r\n        return null;\r\n    } else if (success) {\r\n        return (\r\n            <Route {...rest} render={() => (children)} />\r\n        );\r\n    } else {\r\n        return (<Redirect to={{ pathname: \"/login\", state: { from: location } }} />);\r\n    }\r\n\r\n} \r\n","import { FC } from 'react';\r\nimport { Redirect, Route, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../..';\r\n\r\nexport const UnauthorizedRoute: FC<{ path: string, exact: boolean }> = ({ children, ...rest }) => {\r\n    const {request, success} = useSelector(state => state.authInfo);\r\n    const location = useLocation<{ from: string; }>();\r\n\r\n    if (request) {\r\n        return null;\r\n    } else if (!success) {\r\n        return (\r\n            <Route {...rest} render={() => (children)} />\r\n        );\r\n    } else {\r\n        return (<Redirect to={location?.state?.from || '/'} />);\r\n    }\r\n\r\n};\r\n","import { FC, ReactElement, useMemo } from 'react';\r\nimport styles from './app-header-button.module.css';\r\nimport { BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst getIcon = (icon: string): ReactElement | null => {\r\n    switch (icon) {\r\n        case 'burger':\r\n            return (<BurgerIcon type=\"primary\" />);\r\n        case 'list':\r\n            return (<ListIcon type=\"primary\" />);\r\n        case 'profile':\r\n            return (<ProfileIcon type=\"primary\" />);\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\ninterface IProps {\r\n    icon: string;\r\n    text: string;\r\n    path?: string;\r\n};\r\n\r\n\r\nexport const AppHeaderButton: FC<IProps> = ({ icon, text, path }) => {\r\n\r\n    const { pathname } = useLocation();\r\n\r\n    const active = useMemo(() => {\r\n        return pathname.toLowerCase() === path?.toLowerCase();\r\n    }, [pathname, path]);\r\n\r\n\r\n    return (\r\n        <Link className={styles.main} to={{ pathname: path ?? '', state: { from: pathname } }} >\r\n            <p className={styles.iconWrapper} >{getIcon(icon)}</p>\r\n            <p className={`text text_type_main-default ${styles.textWrapper} ${active ? styles.active : ''}`}>\r\n                {text}\r\n            </p>\r\n        </Link>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport styles from './app-header.module.css';\r\nimport { AppHeaderButton } from '../app-header-button/app-header-button';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst ROOT = '/';\r\nconst FEED = '/feed';\r\nconst LK = '/profile';\r\n\r\nexport const AppHeader: FC = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <header className={styles.nav} >\r\n      <div className={styles.leftItems}>\r\n        <AppHeaderButton path={ROOT} icon='burger' text='Конструктор' />\r\n        <AppHeaderButton path={FEED} icon='list' text='Лента заказов' />\r\n      </div>\r\n      <Link className={styles.homeLink} to={{ pathname: '/', state: { from: pathname } }}><Logo/></Link>\r\n      <div className={styles.rightItems}>\r\n        <AppHeaderButton path={LK} icon='profile' text='Личный кабинет' />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import { requestIngredients } from \"../../utils/request\";\r\nimport { AppDispatch, AppThunk, IBasicAction, IIngredient, IIngredientCategory, TIngredientType } from \"../../utils/types\";\r\n\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\n\r\nexport const SET_ACTIVE_TAB: 'SET_ACTIVE_TAB' = 'SET_ACTIVE_TAB';\r\n\r\ninterface IIngredientsAction extends IBasicAction<typeof GET_INGREDIENTS_SUCCESS> {\r\n    ingredients: IIngredient[];\r\n    categories: IIngredientCategory[];\r\n};\r\ninterface IIngredientsBasicAction extends IBasicAction<typeof GET_INGREDIENTS_REQUEST\r\n    | typeof GET_INGREDIENTS_FAILED> { };\r\ninterface IIngredientsActiveTabAction extends IBasicAction<typeof SET_ACTIVE_TAB> {\r\n    active: TIngredientType;\r\n};\r\n\r\nexport type TIngredientsActions = IIngredientsBasicAction | IIngredientsAction | IIngredientsActiveTabAction;\r\n\r\nexport const getIngredients: AppThunk = () => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: GET_INGREDIENTS_REQUEST });\r\n        requestIngredients().then(([ingredients, categories]) => {\r\n            dispatch({ type: GET_INGREDIENTS_SUCCESS, ingredients, categories });\r\n        }).catch(() => {\r\n            dispatch({ type: GET_INGREDIENTS_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\n","import React, { createRef } from \"react\";\r\nimport { TIngredientType } from \"../utils/types\";\r\n\r\nexport type TCategoryContext = {\r\n    [ref in TIngredientType]: React.RefObject<HTMLParagraphElement>;\r\n};\r\n\r\nexport const initialCategoryContext: TCategoryContext =\r\n{\r\n    bun: createRef<HTMLParagraphElement>(),\r\n    main: createRef<HTMLParagraphElement>(),\r\n    sauce: createRef<HTMLParagraphElement>()\r\n};\r\n\r\nexport const CategoryContext = React.createContext<TCategoryContext>(initialCategoryContext);","import { useCallback, useContext } from 'react';\r\nimport styles from './burger-ingredients-tabs.module.css';\r\nimport { SET_ACTIVE_TAB } from '../../services/actions/ingredients';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { CategoryContext } from '../../hooks/category-context';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\n\r\nexport const BurgerIngredientsTabs = () => {\r\n\r\n  const { activeTab, cats } = useSelector(state => state.ingredients);\r\n  const categoryContext = useContext(CategoryContext);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSetActive = useCallback((type: string) => {\r\n    const cat = cats.find(c => c.type === type);\r\n    if (cat) {\r\n      categoryContext[cat.type].current?.scrollIntoView({ behavior: \"smooth\" });\r\n      dispatch({ type: SET_ACTIVE_TAB, active: cat.type });\r\n    }\r\n  }, [dispatch, cats, categoryContext]);\r\n\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      {cats.map(cat => (\r\n        <Tab value={cat.type} key={cat.type} active={cat.type === activeTab} onClick={onSetActive} >\r\n          {cat.name}\r\n        </Tab>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { FC } from 'react';\r\nimport styles from './counter.module.css';\r\n// сначала нарисовал свой, потом увидел в либе\r\nexport const Counter: FC<{ count: number | undefined }> = ({ count }) => {\r\n    if (!count || count < 1) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={styles.main}>\r\n            <p className='text text_type_main-small'>{count}</p>\r\n        </div>\r\n    );\r\n}","import { useDrag } from 'react-dnd/dist/hooks';\r\nimport styles from './burger-ingredients-card.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { FC } from 'react';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { Counter } from '../../ui/counter/counter';\r\n\r\ninterface IProps {\r\n  ingredient: IIngredient;\r\n  count?: number;\r\n}\r\n\r\nexport const BurgerIngredientsCard: FC<IProps> = ({ ingredient, count }) => {\r\n  const location = useLocation();\r\n  const [{ showCount, opacity }, dragRef] = useDrag({\r\n    type: 'new_ingredient',\r\n    item: { ...ingredient },\r\n    collect: monitor => ({\r\n      showCount: !monitor.isDragging(),\r\n      opacity: monitor.isDragging() ? 0.5 : 1\r\n    })\r\n  });\r\n\r\n  return (\r\n    <Link className={styles.main} style={{ opacity }}\r\n      to={{ pathname: `/ingredients/${ingredient._id}`, state: { background: location } }} >\r\n      {showCount && <Counter count={count} />}\r\n      <div ref={dragRef}>\r\n        <img src={ingredient.image} alt={ingredient.name} />\r\n        <div className={styles.priceWrapper}>\r\n          <p className={`text_type_digits-default ${styles.textWrapper}`}>\r\n            {ingredient.price}\r\n          </p>\r\n          <div className={styles.logoWrapper}>\r\n            <CurrencyIcon type=\"primary\" />\r\n          </div>\r\n        </div>\r\n        <p className=\"text text_type_main-small\">\r\n          {ingredient.name}\r\n        </p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import { FC, useContext, useMemo } from 'react';\r\nimport styles from './burger-ingredients-category.module.css';\r\nimport { BurgerIngredientsCard } from '../burger-ingredients-card/burger-ingredients-card';\r\nimport { TIngredientType } from '../../utils/types';\r\nimport { CategoryContext } from '../../hooks/category-context';\r\nimport { useSelector } from '../..';\r\n\r\n\r\nexport const BurgerIngredientsCategory: FC<{ type: TIngredientType }> = ({ type }) => {\r\n\r\n  const { items, cats } = useSelector(state => state.ingredients);\r\n  const counter = useSelector(state => state.constructor.counter) ?? {};\r\n\r\n  const categoryContext = useContext(CategoryContext);\r\n\r\n  const cat = useMemo(() => cats.find(c => c.type === type), [cats, type]);\r\n  if (!cat) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div data-testid={`${type}_cat`} className={styles.main}>\r\n      <p className={`text text_type_main-medium ${styles.textWrapper}`} ref={categoryContext[cat.type]} >{cat.name}</p>\r\n      {items.filter(ing => ing.type === type).map(ing => (\r\n        <BurgerIngredientsCard key={ing._id} ingredient={ing} count={counter[ing._id]} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, { useCallback, createRef, SyntheticEvent, useContext } from 'react';\r\nimport styles from './burger-ingredients-box.module.css';\r\nimport { BurgerIngredientsCategory } from '../burger-ingredients-category/burger-ingredients-category';\r\nimport { SET_ACTIVE_TAB } from '../../services/actions/ingredients';\r\nimport { CategoryContext } from '../../hooks/category-context';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\n\r\nexport const BurgerIngredientsBox = () => {\r\n\r\n  const cats = useSelector(state => state.ingredients.cats);\r\n  const categoryContext = useContext(CategoryContext);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const positionRef = createRef<HTMLDivElement>();\r\n\r\n  const onScroll = useCallback((e: SyntheticEvent) => {\r\n    e.persist();\r\n    e.preventDefault();\r\n    const getYPos = (ref: React.RefObject<HTMLDivElement>) => ref.current ? Math.abs(Math.floor(ref.current.getBoundingClientRect().top)) : 0;\r\n    const parentTop = positionRef.current ? positionRef.current.getBoundingClientRect().top + 2 : 0;\r\n    const closestCat = { type: cats[0].type, pos: getYPos(categoryContext[cats[0].type]) };\r\n    cats.forEach(cat => {\r\n      if (closestCat.type === cat.type) {\r\n        return;\r\n      }\r\n      const top = Math.abs(parentTop - getYPos(categoryContext[cat.type]));\r\n      if (closestCat.pos > top) {\r\n        closestCat.type = cat.type;\r\n        closestCat.pos = top;\r\n      }\r\n    });\r\n    dispatch({ type: SET_ACTIVE_TAB, active: closestCat.type });\r\n  }, [cats, positionRef, dispatch, categoryContext]);\r\n\r\n  return (\r\n    <div className={`${styles.main} scrollable`} onScroll={onScroll} ref={positionRef}>\r\n      {cats.map(cat => (<BurgerIngredientsCategory\r\n        key={cat.type} type={cat.type} />))}\r\n    </div>\r\n  );\r\n}\r\n\r\n","import burgerIngredients from './burger-ingredients.module.css';\r\nimport { BurgerIngredientsTabs } from '../burger-ingredients-tabs/burger-ingredients-tabs';\r\nimport { BurgerIngredientsBox } from '../burger-ingredients-box/burger-ingredients-box';\r\nimport { CategoryContext, initialCategoryContext } from '../../hooks/category-context';\r\n\r\n\r\nexport const BurgerIngredients = () => {\r\n\r\n  return (\r\n    <div className={burgerIngredients.main}>\r\n      <CategoryContext.Provider value={initialCategoryContext}>\r\n        <BurgerIngredientsTabs />\r\n        <BurgerIngredientsBox />\r\n      </CategoryContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","import { AppDispatch, AppThunk, IBasicAction, IConstructorItem } from \"../../utils/types\";\r\n\r\nexport const CHANGE_INGREDIENTS: 'CHANGE_INGREDIENTS' = 'CHANGE_INGREDIENTS';\r\nexport const SET_PRICE: 'SET_PRICE' = 'SET_PRICE';\r\nexport const UPDATE_INGREDIENTS_ORDER: 'UPDATE_INGREDIENTS_ORDER' = 'UPDATE_INGREDIENTS_ORDER';\r\nexport const CLEAR_CONSTRUCTOR: 'CLEAR_CONSTRUCTOR' = 'CLEAR_CONSTRUCTOR';\r\n\r\ninterface IClearConstructorAction extends IBasicAction<typeof CLEAR_CONSTRUCTOR> { };\r\n\r\ninterface ISetPriceAction extends IBasicAction<typeof SET_PRICE> {\r\n    price: number;\r\n};\r\n\r\ninterface IConstructorAction extends IBasicAction<typeof CHANGE_INGREDIENTS> {\r\n    bun: string;\r\n    items: IConstructorItem[];\r\n};\r\ninterface IUpdateIngredientsAction extends IBasicAction<typeof UPDATE_INGREDIENTS_ORDER> {\r\n    items: IConstructorItem[];\r\n};\r\n\r\nexport type TConstructorActions = IClearConstructorAction | ISetPriceAction | IConstructorAction | IUpdateIngredientsAction;\r\n\r\n\r\nexport const changeIngredients: AppThunk = (bun: string, items: IConstructorItem[]) =>\r\n    (dispatch: AppDispatch) =>\r\n        dispatch({ type: CHANGE_INGREDIENTS, bun, items });\r\n\r\n","import { FC, SyntheticEvent, useCallback, useRef } from 'react';\r\nimport { useDrop, useDrag } from 'react-dnd/dist/hooks';\r\nimport styles from './burger-constructor-item.module.css';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { UPDATE_INGREDIENTS_ORDER } from '../../services/actions/constructor';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\ninterface IProps {\r\n  data: IIngredient;\r\n  index: number;\r\n  onRemoveIngredient: (arg0: number) => void;\r\n}\r\ninterface IDropItem {\r\n  index: number;\r\n}\r\nexport const BurgerConstructorItem: FC<IProps> = ({ data, index, onRemoveIngredient }) => {\r\n\r\n  const items = useSelector(state => state.constructor.items);\r\n\r\n  const dispatch = useDispatch();\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  const moveCard = useCallback((dragIndex: number, hoverIndex: number) => {\r\n    const dragCard = items[dragIndex];\r\n    const newCards = [...items]\r\n    newCards.splice(dragIndex, 1)\r\n    newCards.splice(hoverIndex, 0, dragCard)\r\n    dispatch({ type: UPDATE_INGREDIENTS_ORDER, items: [...newCards] });\r\n  }, [items, dispatch]);\r\n\r\n  const [, drop] = useDrop<IDropItem>({\r\n    accept: 'constructor_item',\r\n    collect(monitor) {\r\n      return {\r\n        handlerId: monitor.getHandlerId()\r\n      }\r\n    },\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const clientOffset = monitor.getClientOffset();\r\n      const hoverClientY = clientOffset ? (clientOffset.y - hoverBoundingRect.top) : 0;\r\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n        return;\r\n      }\r\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n        return;\r\n      }\r\n      moveCard(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    }\r\n  });\r\n\r\n  const [{ opacity }, drag] = useDrag({\r\n    type: 'constructor_item',\r\n    item: { index },\r\n    collect: monitor => ({\r\n      opacity: monitor.isDragging() ? 0 : 1\r\n    })\r\n  });\r\n\r\n\r\n  drag(drop(ref));\r\n  const handleDrop = (e: SyntheticEvent) => {\r\n    e.persist();\r\n    e.preventDefault();\r\n  }\r\n  return (<div className={styles.main} style={{ opacity }} ref={ref} onDrop={handleDrop}>\r\n    <div className={styles.ingredientWrapper}>\r\n      <div className={styles.dragIconWrapper} >\r\n        <DragIcon type='primary' />\r\n      </div>\r\n      <ConstructorElement\r\n        text={data.name}\r\n        thumbnail={data.image}\r\n        price={data.price}\r\n        handleClose={() => onRemoveIngredient(index)} />\r\n    </div>\r\n  </div>);\r\n};\r\n","import { FC, useCallback, useEffect, useMemo } from 'react';\r\nimport { useDrop } from 'react-dnd/dist/hooks';\r\nimport styles from './burger-constructor-list.module.css';\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { SET_PRICE, CHANGE_INGREDIENTS } from '../../services/actions/constructor';\r\nimport { BurgerConstructorItem } from '../burger-constructor-item/burger-constructor-item';\r\nimport { IIngredient } from '../../utils/types';\r\nimport { useDispatch, useSelector } from '../..';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const isBun = (ingredient: IIngredient): boolean => ingredient.type === 'bun';\r\n\r\nexport const BurgerConstructorList: FC = () => {\r\n\r\n  const ingredients = useSelector(state => state.ingredients.items);\r\n  const { bun: bun_id, items } = useSelector(state => state.constructor);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  interface IDropResult {\r\n    isHover: boolean;\r\n  }\r\n\r\n  const [{ isHover }, dropNewRef] = useDrop<IIngredient, any, IDropResult>({\r\n    accept: 'new_ingredient',\r\n    collect: monitor => ({\r\n      isHover: monitor.isOver()\r\n    }),\r\n    drop(item) {\r\n      onDropNewIngredientHandler(item);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const arr = items ? [...items] : [];\r\n    if (bun_id) {\r\n      const bun_item = { id: bun_id, key: '' };\r\n      arr.splice(0, 0, bun_item, bun_item);\r\n    }\r\n    const price = arr.map(item => (item ? ingredients.find(o => o._id === item.id)?.price : 0)).reduce((acc, price) => (acc ?? 0) + (price ?? 0), 0);\r\n    dispatch({ type: SET_PRICE, price });\r\n  }, [bun_id, items, ingredients, dispatch]);\r\n\r\n  const onDropNewIngredientHandler = useCallback((item: IIngredient) => {\r\n    const arr = items ? [...items] : [];\r\n    let bun = bun_id;\r\n    if (isBun(item)) {\r\n      bun = item._id;\r\n    } else {\r\n      arr.splice(-1, 0, { id: item._id, key: uuid() });\r\n    }\r\n    dispatch({ type: CHANGE_INGREDIENTS, bun: bun, items: arr });\r\n  }, [dispatch, items, bun_id]);\r\n\r\n  const onRemoveIngredient = useCallback((index: number) => {\r\n    const arr = [...items];\r\n    arr.splice(index, 1);\r\n    dispatch({ type: CHANGE_INGREDIENTS, bun: bun_id, items: arr });\r\n  }, [items, bun_id, dispatch]);\r\n\r\n\r\n  const topData = useMemo(() => ingredients.find(i => i._id === bun_id), [ingredients, bun_id]);\r\n  const bottomData = useMemo(() => topData, [topData]);\r\n  const selectedIngredients = useMemo(() => items?.map(item => {\r\n    const obj = ingredients.find(o => o._id === item.id);\r\n    if (obj) {\r\n      return { ...obj, key: item.key };\r\n    }\r\n    return undefined;\r\n  }).filter(o => o !== undefined), [items, ingredients]);\r\n\r\n  return (\r\n    <div data-testid='drop-target' className={`${styles.main} ${isHover ? styles.onHover : ''}`} ref={dropNewRef} >\r\n      {topData && <div className={styles.topBun}>\r\n        <ConstructorElement\r\n          type='top'\r\n          isLocked={true}\r\n          text={`${topData.name} (верх)`}\r\n          thumbnail={topData.image}\r\n          price={topData.price} />\r\n      </div>}\r\n      {items && <div className={`${styles.ingredients} scrollable`} style={{ margin: bun_id ? '0' : 'auto 0' }}>\r\n        {selectedIngredients?.map((item, index) => {\r\n          return (item && <BurgerConstructorItem\r\n            key={item.key}\r\n            data={item} index={index}\r\n            onRemoveIngredient={onRemoveIngredient} />);\r\n        })\r\n        }\r\n      </div>}\r\n      {bottomData && <div className={styles.bottomBun}>\r\n        <ConstructorElement\r\n          type='bottom'\r\n          isLocked={true}\r\n          text={`${bottomData.name} (низ)`}\r\n          thumbnail={bottomData.image}\r\n          price={bottomData.price} />\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from 'react';\r\nimport styles from './modal-overlay.module.css';\r\n\r\nexport const ModalOverlay: FC<{ isShowing: boolean, toggle: () => void }> = ({ isShowing, toggle }) => {\r\n    const handleClickAction = () => {\r\n        if (isShowing) {\r\n            toggle();\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.main} onClick={handleClickAction} />\r\n    );\r\n};\r\n","import React, { useEffect, useCallback, FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport styles from './modal.module.css';\r\nimport { ModalOverlay } from '../modal-overlay/modal-overlay';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IProps {\r\n    isShowing: boolean;\r\n    toggle: () => void;\r\n    headerText: string;\r\n};\r\n\r\nexport const Modal: FC<IProps> = (props) => {\r\n\r\n    const isOpen = props.isShowing\r\n\r\n    const closeModal = useCallback(() => {\r\n        if (isOpen) {\r\n            props.toggle();\r\n        }\r\n    }, [isOpen, props]);\r\n\r\n    useEffect(() => {\r\n        function closeByEscape(evt: KeyboardEvent) {\r\n            if (evt.key === 'Escape') {\r\n                closeModal();\r\n            }\r\n        }\r\n        if (isOpen) {\r\n            document.addEventListener('keydown', closeByEscape);\r\n            return () => {\r\n                document.removeEventListener('keydown', closeByEscape);\r\n            }\r\n        }\r\n    }, [isOpen, closeModal])\r\n\r\n    const renderHeader = (text: string) => {\r\n        return (<>\r\n            <p className={`text text_type_main-large`}>\r\n                {text}\r\n            </p>\r\n            <button data-testid='close-modal-btn' className={styles.closeButton} onClick={closeModal}><CloseIcon type='primary' /></button>\r\n        </>)\r\n    }\r\n\r\n    return props.isShowing ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <div className={styles.main}>\r\n                <div className='modal-grid'>\r\n                    <div className={styles.modalHeader}>\r\n                        {renderHeader(props.headerText)}\r\n                    </div>\r\n                    <div className={styles.modalContent}>\r\n                        {props.children}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalOverlay isShowing={props.isShowing} toggle={props.toggle} />\r\n        </React.Fragment>, document.getElementById(\"react-modals\")!)\r\n        : null;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/done.b2157769.png\";","\r\nimport { requestOrder } from \"../../utils/request\";\r\nimport { AppDispatch, AppThunk, IBasicAction } from \"../../utils/types\";\r\nimport { CLEAR_CONSTRUCTOR } from \"./constructor\";\r\n\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\nexport const CLOSE_ORDER: 'CLOSE_ORDER' = 'CLOSE_ORDER';\r\n\r\ninterface IOrderDetailsSuccessAction extends IBasicAction<typeof GET_ORDER_SUCCESS> {\r\n    name: string;\r\n    number: string;\r\n}\r\ninterface IOrderDetailsAction extends IBasicAction<typeof GET_ORDER_REQUEST\r\n    | typeof GET_ORDER_FAILED | typeof CLOSE_ORDER> { };\r\n\r\nexport type TOrderDetailsActions = IOrderDetailsAction | IOrderDetailsSuccessAction;\r\n\r\nexport const getOrder: AppThunk = (ingredients: string[]) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: GET_ORDER_REQUEST });\r\n        requestOrder(ingredients).then(({ name, number }) => {\r\n            dispatch({ type: GET_ORDER_SUCCESS, name, number });\r\n            dispatch({ type: CLEAR_CONSTRUCTOR });\r\n        }).catch(() => {\r\n            dispatch({ type: GET_ORDER_FAILED });\r\n        })\r\n    }\r\n};\r\n\r\n","import { useCallback } from 'react';\r\nimport styles from './burger-constructor-modal-order.module.css'\r\nimport confirmImage from '../../images/modal-order/done.png';\r\nimport { CLOSE_ORDER } from '../../services/actions/order-details';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\n\r\nexport const BurgerConstrctorModalOrder = () => {\r\n    const order = useSelector(state => state.orderDetails.number);\r\n    const dispatch = useDispatch();\r\n    const onCloseOrder = useCallback(() => {\r\n        dispatch({ type: CLOSE_ORDER });\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className={styles.main} >\r\n            <p className={`text text_type_digits-large`}>{order}</p>\r\n            <p className='text text_type_main-medium'>идентификатор заказа</p>\r\n            <button className={styles.confirmButton}\r\n                style={{ backgroundImage: `url(${confirmImage})` }} onClick={onCloseOrder} />\r\n            <p className='text text_type_main-small'>Ваш заказ начали готовить</p>\r\n            <p className={`text text_type_main-small ${styles.comment}`}>Дождитесь готовности на орбитальной станции</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n","import { SyntheticEvent } from 'react';\r\nimport styles from './burger-constructor-submit.module.css';\r\nimport { Button, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { Modal } from '../modal/modal';\r\nimport { BurgerConstrctorModalOrder } from '../burger-constructor-modal-order/burger-constructor-modal-order';\r\nimport { getOrder, CLOSE_ORDER } from '../../services/actions/order-details';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../..';\r\n\r\n\r\n\r\nexport const BurgerConstructorSubmit = () => {\r\n  const authorized = useSelector(state => state.authInfo.success);\r\n  const location = useLocation();\r\n  const { items: ingredients, bun } = useSelector(state => state.constructor);\r\n  const history = useHistory();\r\n  const price = useSelector(state => state.constructor.price);\r\n  const showOrder = useSelector(state => state.orderDetails.show);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleOrderSubmit = (event: SyntheticEvent) => {\r\n    event.persist();\r\n    event.stopPropagation();\r\n    if (!authorized) {\r\n      history.replace({ pathname: \"/login\", state: { from: location } });\r\n      return;\r\n    }\r\n    const arr = ingredients?.map(i => i.id) ?? [];\r\n    if (bun?.length > 0) {\r\n      arr.splice(-1, 0, bun, bun);\r\n    }\r\n    dispatch(getOrder(arr));\r\n  };\r\n\r\n  const handleCloseOrder = () => {\r\n    dispatch({ type: CLOSE_ORDER });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={styles.main}>\r\n      <p className=\"text text_type_digits-medium\">\r\n        {price}\r\n      </p>\r\n      <div className={styles.iconWrapper}>\r\n        <CurrencyIcon type='primary' />\r\n      </div>\r\n      <div className={styles.buttonWrapper}>\r\n        <Button type=\"primary\" size=\"large\" onClick={handleOrderSubmit} disabled={!price || !bun}>\r\n          Оформить заказ\r\n        </Button>\r\n      </div>\r\n      <Modal isShowing={showOrder} toggle={handleCloseOrder} headerText=' '>\r\n        <BurgerConstrctorModalOrder />\r\n      </Modal>\r\n    </div>\r\n\r\n  );\r\n};\r\n","import styles from './burger-constructor.module.css';\r\nimport { BurgerConstructorList } from '../burger-constructor-list/burger-constructor-list';\r\nimport { BurgerConstructorSubmit } from '../burger-constructor-submit/burger-constructor-submit';\r\n\r\nexport const BurgerConstructor = () => {\r\n  return (\r\n    <div className={styles.main}>\r\n      <BurgerConstructorList />\r\n      <BurgerConstructorSubmit />\r\n    </div>\r\n  );\r\n};\r\n","import styles from './home.module.css';\r\nimport { BurgerIngredients } from '../components/burger-ingredients/burger-ingredients'\r\nimport { BurgerConstructor } from '../components/burger-constructor/burger-constructor';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\n\r\nexport const HomePage = () => {\r\n  return (<>\r\n    <h1 className={`text_type_main-large ${styles.staticText}`}>Соберите бургер</h1>\r\n    <DndProvider backend={HTML5Backend}>\r\n      <BurgerIngredients />\r\n      <BurgerConstructor />\r\n    </DndProvider>\r\n  </>);\r\n}","import { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport React, { FC, ReactNode } from 'react';\r\nimport styles from './common-form.module.css';\r\n\r\nexport interface IFormData {\r\n    [key: string]: string;\r\n}\r\n\r\nexport const CommonForm: FC<{\r\n    children: ReactNode,\r\n    headerText: string,\r\n    submitText: string,\r\n    onSubmit: (data: IFormData) => void\r\n}> = (\r\n    { children, headerText, submitText, onSubmit }) => {\r\n\r\n        const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.persist();\r\n            e.preventDefault();\r\n            const target = e.target as (typeof e.target & HTMLInputElement[]);\r\n            const obj: IFormData = {};\r\n            for (let ctrl of target) {\r\n                if (ctrl?.localName === \"input\") {\r\n                    obj[ctrl.name] = ctrl.value;\r\n                }\r\n            }\r\n            onSubmit(obj);\r\n        }\r\n        return (\r\n            <form className={styles.main} onSubmit={handleSubmit}>\r\n                <h1 className={`text text_type_main-medium ${styles.header}`}>{headerText}</h1>\r\n                {children}\r\n                <div className={styles.buttonWrapper}>\r\n                    <Button type='primary' size='large'>{submitText}</Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = <T>(inputValues: T) => {\r\n    const [form, setValues] = useState(inputValues);\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        event.persist();\r\n        event.preventDefault();\r\n        const { value, name } = event.target;\r\n        setValues({ ...form, [name]: value });\r\n    };\r\n    return { form, handleChange, setValues };\r\n}","import styles from './login.module.css';\r\nimport { CommonForm, IFormData } from '../components/common-form';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { EmailInput, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { login } from '../services/actions/auth-info';\r\nimport { useForm } from '../hooks/use-form';\r\nimport { ILoginForm } from '../utils/types';\r\nimport { useDispatch, useSelector } from '..';\r\n\r\nexport const LoginPage = () => {\r\n    const email = useSelector(state => state.authInfo.user.email);\r\n    const authorized = useSelector(state => state.authInfo.success);\r\n    const dispatch = useDispatch();\r\n    const { form, handleChange } = useForm<ILoginForm>({ email: email, password: '' });\r\n    const location = useLocation<{ from: string }>();\r\n\r\n\r\n    const handleLogin = ({ email, password }: IFormData) => {\r\n        dispatch(login({ email, password }));\r\n    };\r\n\r\n    if (authorized) {\r\n        return (<Redirect to={location?.state?.from || '/'} />);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={styles.main} >\r\n            <div className='form-area'>\r\n                <CommonForm headerText='Вход' submitText='Войти' onSubmit={handleLogin} >\r\n                    <EmailInput name='email' value={form.email} onChange={handleChange} />\r\n                    <PasswordInput value={form.password} name='password' onChange={handleChange} />\r\n                </CommonForm>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Вы — новый пользователь? <Link to='/register'>Зарегистрироваться</Link></p>\r\n                <p className=\"text text_type_main-default text_color_inactive\"> Забыли пароль? <Link to='/forgot-password'>Восстановить пароль</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n};","\r\nimport styles from './register.module.css';\r\nimport { CommonForm, IFormData } from '../components/common-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Input, PasswordInput, EmailInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { register } from '../services/actions/auth-info';\r\nimport { useForm } from '../hooks/use-form';\r\nimport { IProfileForm } from '../utils/types';\r\nimport { useDispatch } from '..';\r\n\r\n\r\nexport const RegisterPage = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { form, handleChange } = useForm<IProfileForm>({ email: '', password: '', name: '' });\r\n\r\n    const handleRegister = ({ name, email, password }: IFormData) => {\r\n        dispatch(register({ name, email, password }));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.main} >\r\n            <div className='form-area'>\r\n                <CommonForm headerText='Регистрация' submitText='Зарегистрироваться' onSubmit={handleRegister} >\r\n                    <Input type='text' name='name' placeholder='Имя' value={form.name} onChange={handleChange} />\r\n                    <EmailInput name='email' value={form.email} onChange={handleChange} />\r\n                    <PasswordInput onChange={handleChange} value={form.password} name='password' />\r\n                </CommonForm>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Уже зарегистрированы? <Link to='/login'>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { requestPasswordReset, requestPasswordSet } from \"../../utils/request\";\r\nimport { AppDispatch, AppThunk, IBasicAction, IResetPasswordForm } from \"../../utils/types\";\r\n\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\n\r\ninterface IResetPasswordAction extends IBasicAction<typeof RESET_PASSWORD_REQUEST> { };\r\n\r\ninterface IResetPasswordSuccessAction extends IBasicAction<typeof RESET_PASSWORD_SUCCESS> {\r\n    message: string;\r\n    stepOnSuccess: string;\r\n};\r\n\r\ninterface IResetPasswordFailedAction extends IBasicAction<typeof RESET_PASSWORD_FAILED> {\r\n    error: string;\r\n    stepOnFailed: string;\r\n};\r\n\r\nexport type TResetPasswordActions = IResetPasswordAction | IResetPasswordSuccessAction | IResetPasswordFailedAction;\r\n\r\nexport const resetPassword: AppThunk = (email: string, stepOnSuccess: string, stepOnFailed: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: RESET_PASSWORD_REQUEST });\r\n        requestPasswordReset(email).then(({ message }) => {\r\n            dispatch({ type: RESET_PASSWORD_SUCCESS, message, stepOnSuccess });\r\n        }).catch(error => {\r\n            dispatch({ type: RESET_PASSWORD_FAILED, error, stepOnFailed });\r\n        })\r\n    }\r\n};\r\n\r\nexport const setPassword: AppThunk = (form: IResetPasswordForm, stepOnSuccess: string, stepOnFailed: string) => {\r\n    return (dispatch: AppDispatch) => {\r\n        dispatch({ type: RESET_PASSWORD_REQUEST });\r\n        requestPasswordSet(form).then(({ message }) => {\r\n            dispatch({ type: RESET_PASSWORD_SUCCESS, message, stepOnSuccess });\r\n        }).catch(error => {\r\n            dispatch({ type: RESET_PASSWORD_FAILED, error, stepOnFailed });\r\n        })\r\n    }\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport styles from './password-recover.module.css';\r\nimport { CommonForm, IFormData } from '../components/common-form';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { EmailInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { resetPassword } from '../services/actions/reset-password';\r\nimport { RESET_PASSWORD_STEP_RECOVER, RESET_PASSWORD_STEP_RESET } from '../utils/constants';\r\nimport { useDispatch, useSelector } from '..';\r\n\r\n\r\nexport const PasswordRecoverPage = () => {\r\n    const { step, message } = useSelector(state => state.resetPassword);\r\n    const [email, setEmail] = useState('');\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        if (step === RESET_PASSWORD_STEP_RESET) {\r\n            history.replace({ pathname: '/reset-password', state: { from: location } });\r\n        }\r\n    }, [step, history, dispatch, location])\r\n\r\n    const onChange = useCallback(e => {\r\n        e.persist();\r\n        e.preventDefault();\r\n        setEmail(e.target.value);\r\n    }, [setEmail])\r\n\r\n    const onSubmit = ({ email }: IFormData) => {\r\n        dispatch(resetPassword(email, RESET_PASSWORD_STEP_RESET, RESET_PASSWORD_STEP_RECOVER));\r\n    }\r\n    return (\r\n        <div className={styles.main} >\r\n            <div className='form-area'>\r\n                <CommonForm headerText='Восстановление пароля' submitText='Восстановить' onSubmit={onSubmit}>\r\n                    <EmailInput name='email' value={email} onChange={onChange} />\r\n                </CommonForm>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{message}</p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useEffect } from 'react';\r\n\r\nimport styles from './password-recover.module.css';\r\nimport { CommonForm, IFormData } from '../components/common-form';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { setPassword } from '../services/actions/reset-password';\r\nimport { RESET_PASSWORD_STEP_LOGIN, RESET_PASSWORD_STEP_RECOVER } from '../utils/constants';\r\nimport { useForm } from '../hooks/use-form';\r\nimport { ILocationState } from '../utils/types';\r\nimport { useDispatch, useSelector } from '..';\r\n\r\n\r\nexport const PasswordResetPage = () => {\r\n    const { step, message } = useSelector(state => state.resetPassword);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation<ILocationState>();\r\n    const { form, handleChange } = useForm({ password: '', token: '' });\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const path = location.state?.from?.pathname;\r\n        if (path !== '/forgot-password' && path !== '/reset-password') {\r\n            history.replace({ pathname: '/not-found', state: { from: location } });\r\n            return;\r\n        }\r\n\r\n        if (step === RESET_PASSWORD_STEP_RECOVER\r\n            || step === RESET_PASSWORD_STEP_LOGIN) {\r\n            history.replace({ pathname: '/login', state: { from: location } });\r\n        }\r\n    }, [history, step, location]);\r\n    // token - код из письма\r\n    const onSubmit = ({ password, token }: IFormData) => {\r\n        dispatch(setPassword({ password, token }, RESET_PASSWORD_STEP_LOGIN, RESET_PASSWORD_STEP_RECOVER));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.main} >\r\n            <div className='form-area'>\r\n                <CommonForm headerText='Восстановление пароля' submitText='Сохранить' onSubmit={onSubmit}>\r\n                    <PasswordInput name='password' value={form.password} onChange={handleChange} />\r\n                    <Input type='text' name='token' value={form.token} placeholder='Введите код из письма' onChange={handleChange} />\r\n                </CommonForm>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{message}</p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль? <Link to='/login'>Войти</Link></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { FC, useCallback, useMemo } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport styles from './profile-menu-button.module.css';\r\n\r\ninterface IProps {\r\n    path?: string;\r\n    text: string;\r\n    onClick?: () => void;\r\n}\r\n\r\nexport const ProfileMenuButton: FC<IProps> = ({ path, text, onClick }) => {\r\n\r\n    const { pathname } = useLocation();\r\n    const history = useHistory();\r\n\r\n    const active = useMemo(() => {\r\n        return pathname.toLowerCase() === path?.toLowerCase();\r\n    }, [pathname, path]);\r\n\r\n    const handleClick = useCallback(() => {\r\n        if (!active) {\r\n            if (typeof onClick === 'function') {\r\n                return onClick();\r\n            } else {\r\n                history.push({ pathname: path, state: { from: pathname } });\r\n            }\r\n        }\r\n    }, [active, history, path, onClick, pathname]);\r\n\r\n    return (\r\n        <button className={styles.main} onClick={handleClick}>\r\n            <p className={`text text_type_main-medium${active ? '' : ' text_color_inactive'}`}>\r\n                {text}\r\n            </p>\r\n        </button>\r\n    );\r\n};\r\n","import { FC } from \"react\";\r\nimport { ProfileMenuButton } from \"../profile-menu-button/profile-menu-button\";\r\nimport styles from './profile-menu.module.css';\r\n\r\ninterface IProps {\r\n    onLogout: () => void;\r\n}\r\n\r\nexport const ProfileMenu: FC<IProps> = ({ onLogout }) => {\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <ProfileMenuButton path='/profile' text='Профиль' />\r\n            <ProfileMenuButton path='/profile/orders' text='История заказов' />\r\n            <ProfileMenuButton text='Выход' onClick={onLogout} />\r\n            <p className=\"text text_type_main-small text_color_inactive\">В этом разделе вы можете изменить свои персональные данные</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, EmailInput, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './profile-home.module.css';\r\nimport { patchUser } from \"../../services/actions/auth-info\";\r\nimport { useForm } from \"../../hooks/use-form\";\r\nimport { IProfileForm } from \"../../utils/types\";\r\nimport { useDispatch, useSelector } from \"../..\";\r\n\r\nexport const ProfileHome = () => {\r\n    const { request, user: {name, email} } = useSelector(state => state.authInfo);\r\n\r\n    const initForm = useMemo<IProfileForm>(() => ({name: name ?? '', email: email ?? '', password: ''}), [name, email]);\r\n    \r\n    const {form, handleChange, setValues} = useForm(initForm);\r\n\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!initForm.password) {\r\n            initForm.password = form.password;\r\n        }\r\n        setDisabled(!request && form.name === initForm.name && form.email === initForm.email && form.password === initForm.password);\r\n    }, [form, initForm, request])\r\n\r\n    \r\n    const onSubmit = useCallback((e) => {\r\n        e.persist();\r\n        e.preventDefault();\r\n        dispatch(patchUser(form));\r\n    }, [form, dispatch]);\r\n    \r\n    const onReset = useCallback((e) => {\r\n        e.persist();\r\n        e.preventDefault();\r\n        setValues({...initForm});\r\n    }, [initForm, setValues]);\r\n  \r\n    return (\r\n        <form className={styles.main} onSubmit={onSubmit}>\r\n            <Input type='text' name='name' value={form.name} placeholder='Имя' onChange={handleChange} />\r\n            <EmailInput  name='email' value={form.email} onChange={handleChange} />\r\n            <PasswordInput name='password' value={form.password} onChange={handleChange} />\r\n            {!disabled && (<div> <Button type='primary' size='medium' disabled={disabled}>Сохранить</Button> \r\n            <Button type='secondary' size='medium' disabled={disabled} onClick={onReset}>Отмена</Button></div>)}\r\n        </form>\r\n    );\r\n}","import { AppThunk, IBasicAction } from \"../../utils/types\";\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\n\r\ninterface IWsServiceAction<T, P = Event> extends IBasicAction<T> {\r\n    payload: P;\r\n}\r\ninterface ISendMessage {\r\n\r\n}\r\ninterface IWsMessageAction<T, P> extends IBasicAction<T> {\r\n    payload: P;\r\n}\r\n\r\nexport const openWsConnection: AppThunk = (url: string, secured = false) =>\r\n    dispatch => {\r\n        let payload = url;\r\n        if (secured) {\r\n            const token = localStorage.getItem('token')?.split(' ')[1];\r\n            payload += `?token=${token}`;\r\n        }\r\n\r\n        dispatch({ type: WS_CONNECTION_START, payload });\r\n    }\r\n\r\n\r\ntype TWsConnectionStartAction = IWsServiceAction<typeof WS_CONNECTION_START, string>;\r\ntype TWsConnectionSuccessAction = IWsServiceAction<typeof WS_CONNECTION_SUCCESS>;\r\ntype TWsConnectionErrorAction = IWsServiceAction<typeof WS_CONNECTION_ERROR>;\r\ntype TWsConnectionClosedAction = IWsServiceAction<typeof WS_CONNECTION_CLOSED>;\r\ntype TWsGetMessageAction = IWsMessageAction<typeof WS_GET_MESSAGE, string>;\r\ntype TWsSendMessageAction = IWsMessageAction<typeof WS_SEND_MESSAGE, ISendMessage>;\r\n\r\nexport type TSocketMiddlewareActions = TWsConnectionStartAction | TWsConnectionSuccessAction\r\n    | TWsConnectionErrorAction | TWsConnectionClosedAction | TWsGetMessageAction | TWsSendMessageAction;\r\n\r\n\r\ntype TWsActionCreator<TEvent = Event> = (event: TEvent) => TSocketMiddlewareActions;\r\n\r\nexport interface IWsActions\r\n{\r\n    wsStart: typeof WS_CONNECTION_START;\r\n    wsSend: typeof WS_SEND_MESSAGE;\r\n    onOpen: TWsActionCreator;\r\n    onError: TWsActionCreator;\r\n    onMessage: TWsActionCreator<MessageEvent<string>>;\r\n    onClose: TWsActionCreator;\r\n};\r\n\r\nexport const wsActions : IWsActions = {\r\n    wsStart: WS_CONNECTION_START,\r\n    wsSend: WS_SEND_MESSAGE,\r\n    onOpen: (event) => ({ type: WS_CONNECTION_SUCCESS, payload: event }),\r\n    onError: (event) => ({ type: WS_CONNECTION_ERROR, payload: event }),\r\n    onMessage: (event) => {\r\n        const { data } = event;\r\n        return ({ type: WS_GET_MESSAGE, payload: data })\r\n    },\r\n    onClose: (event) => ({ type: WS_CONNECTION_CLOSED, payload: event }),\r\n};\r\n\r\n","import { FC } from 'react';\r\nimport styles from './ingredient-icon.module.css'\r\n\r\ninterface IProps {\r\n    image: string;\r\n    info?: string;\r\n}\r\nexport const IngredientIcon: FC<IProps> = ({ image, info }) => {\r\n    return (<div className={styles.ingredientBg}>\r\n        <div className={styles.ingredient} style={{ backgroundImage: `url(${image})` }}>\r\n            <p className='text text_type_main-default'>{info}</p>\r\n        </div>\r\n    </div>);\r\n}","import { useSelector } from '../..';\r\nimport styles from './feed-order.module.css';\r\nimport { IFeedOrder } from '../../utils/types'\r\nimport { useMemo } from 'react';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { IngredientIcon } from '../../ui/ingredient-icon/ingredient-icon';\r\n\r\ninterface IProps {\r\n    order: IFeedOrder<string>;\r\n}\r\nconst MAX_ITEMS_COUNT = 7;\r\nexport const FeedOrder = ({ order }: IProps) => {\r\n    const ingredients = useSelector(store => store.ingredients.items)?.filter(i => order.ingredients.includes(i._id));\r\n\r\n    const { items, extra } = useMemo(() => {\r\n        const count = ingredients.length;\r\n        return (count > MAX_ITEMS_COUNT) ?\r\n            { items: ingredients.slice(0, MAX_ITEMS_COUNT), extra: '+' + (count - MAX_ITEMS_COUNT).toString() }\r\n            : { items: ingredients, extra: '' };\r\n    }, [ingredients]);\r\n\r\n    const date = useMemo(() => new Date(order.createdAt), [order.createdAt]);\r\n    const price = useMemo(() => { return ingredients ? ingredients.map(i => Number(i.price)).reduce((acc, p) => acc += p) : 0 }, [ingredients]);\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.content}>\r\n                <p className={`text text_type_digits-default`}>#{order.number}</p>\r\n                <p className={`text text_type_main-default text_color_inactive`}>{date.toLocaleString()}</p>\r\n            </div>\r\n            <p className=\"text text_type_main-default\">{order.name}</p>\r\n            <div className={styles.content}>\r\n                <div className={styles.ingredients}>\r\n                    {\r\n                        items.map((i, idx) => (\r\n                            <div className={styles.icon} style={{ zIndex: `${1000 - idx}` }} key={`${idx}_${i._id}`}>\r\n                                <IngredientIcon image={i.image} info={idx === items.length - 1 ? extra : ''} />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                <p className={`text text_type_main-medium ${styles.price}`}>{price}&nbsp;<CurrencyIcon type=\"primary\" /></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import { Link, useLocation } from 'react-router-dom';\r\nimport { useSelector } from '../..';\r\nimport { FeedOrder } from '../feed-order/feed-order';\r\nimport styles from './feed-list.module.css';\r\n\r\nexport const FeedList = () => {\r\n    const feed = useSelector(state => state.feed);\r\n    const location = useLocation();\r\n\r\n    if (!feed.data.success) {\r\n        return null;\r\n    }\r\n    return (<div className={`${styles.main} scrollable`}>\r\n        {feed.data.orders.map(order =>\r\n            <Link className={styles.link} key={order._id}\r\n                to={{ pathname: `${location.pathname}/${order._id}`, state: { background: location } }} >\r\n                <FeedOrder order={order} />\r\n            </Link>)}\r\n    </div>);\r\n}\r\n\r\n\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from '../..';\r\nimport { openWsConnection, WS_CONNECTION_CLOSED } from '../../services/actions/socket-middleware';\r\nimport { WS_ORDERS_URL } from '../../utils/constants';\r\nimport { FeedList } from '../feed-list/feed-list';\r\nimport styles from './profile-orders.module.css';\r\n\r\nexport const ProfileOrders = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(openWsConnection(WS_ORDERS_URL, true));\r\n        return () => { dispatch({ type: WS_CONNECTION_CLOSED }) };\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (<div className={styles.main}>\r\n        <FeedList />\r\n    </div>\r\n    );\r\n}","import { FC, useMemo } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  path: string;\r\n}\r\nexport const Route: FC<IProps> = ({ children, path }) => {\r\n  const { pathname } = useLocation();\r\n  const current = useMemo(() => {\r\n    return pathname.toLocaleLowerCase() === path.toLocaleLowerCase();\r\n  }, [pathname, path]);\r\n  if (!current) {\r\n    return null;\r\n  } else {\r\n    return (<>\r\n      {children}\r\n    </>);\r\n  }\r\n};","import { useCallback } from 'react';\r\n\r\nimport styles from './profile.module.css';\r\nimport { ProfileMenu } from '../components/profile-menu/profile-menu';\r\nimport { ProfileHome } from '../components/profile-home/profile-home';\r\nimport { ProfileOrders } from '../components/profile-orders/profile-orders';\r\nimport { Route } from '../components/route/route';\r\n\r\nimport { logout } from '../services/actions/auth-info';\r\nimport { useDispatch } from '..';\r\n\r\nexport const ProfilePage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    dispatch(logout())\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.main} >\r\n      <ProfileMenu onLogout={handleLogout} />\r\n      <Route path='/profile'><ProfileHome /></Route>\r\n      <Route path='/profile/orders'><ProfileOrders /></Route>\r\n    </div>\r\n  );\r\n}","import { useMemo, } from 'react';\r\nimport styles from './burger-ingredients-modal-details.module.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../..';\r\n\r\n\r\nconst detailsAccessors = [\r\n    { name: 'Калории,ккал', accsessor: 'calories' },\r\n    { name: 'Белки, г', accsessor: 'proteins' },\r\n    { name: 'Жиры, г', accsessor: 'fat' },\r\n    { name: 'Углеводы, г', accsessor: 'carbohydrates' }\r\n];\r\n\r\nexport const BurgerIngredientsModalDetails = () => {\r\n\r\n    const { id } = useParams<{ id: string }>();\r\n    const ingredients = useSelector(store => store.ingredients.items);\r\n    const ingredient = useMemo(() => {\r\n        return ingredients.find(o => o._id === id)\r\n    }, [id, ingredients]);\r\n    if (!ingredient) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className={styles.main} >\r\n            <img src={ingredient.image_large} alt={ingredient.name} />\r\n            <p className='text text_type_main-medium'>{ingredient.name}</p>\r\n            <div className={styles.details}>\r\n                {detailsAccessors.map(o => (\r\n                    <div key={o.accsessor} className={styles.info}>\r\n                        <p className={`text text_type_main-small`}>{o.name}</p>\r\n                        {/* @ts-ignore */}\r\n                        <p className={`text text_type_main-medium`}>{ingredient[o.accsessor]}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import styles from './ingredient.module.css';\r\nimport { BurgerIngredientsModalDetails } from '../components/burger-ingredients-modal-details/burger-ingredients-modal-details';\r\n\r\nexport const IngredientPage = () => {\r\n  return (\r\n    <div className={styles.main} >\r\n      <div className={`form-area ${styles.box}`}>\r\n        <h1 className={`text text_type_main-large ${styles.header}`}>Детали ингредиента</h1>\r\n        <BurgerIngredientsModalDetails />\r\n      </div>\r\n    </div>\r\n  );\r\n}","import styles from './not-found-404.module.css';\r\n\r\n\r\nexport const NotFound404Page = () => {\r\n    return (\r\n        <div className={styles.main} >\r\n            <div className='form-area'>\r\n                <p className=\"text text_type_main-large\">Страница не найдена</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { useMemo } from 'react';\r\nimport { useSelector } from '../..';\r\nimport { TFeedOrderStatusDone } from '../../utils/types';\r\nimport styles from './feed-summary.module.css';\r\n\r\n\r\nexport const FeedSummary = () => {\r\n    const state = useSelector(state => state.feed);\r\n\r\n    const [today, total, waiting, done] = useMemo(() => {\r\n        if (!state.wsConnected || !state.data.success) {\r\n            return [0, 0, undefined, undefined];\r\n        }\r\n        const done: string[] = [];\r\n        const waiting: string[] = [];\r\n        state.data.orders.forEach(o => {\r\n            if (o.status === TFeedOrderStatusDone) {\r\n                done.push(o.number);\r\n            } else {\r\n                waiting.push(o.number);\r\n            }\r\n        });\r\n        return [state.data.totalToday, state.data.total, waiting, done];\r\n    }, [state]);\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.firstRow}>\r\n                <div className={styles.leftColumn}>\r\n                    <p className={`text text_type_main-default ${styles.firstHeader}`}>Готовы:</p>\r\n                    <div className={styles.leftNums}>{\r\n                        done?.map(s => (<p key={s} className={`text text_type_digits-default`}>{s}</p>))\r\n                    }</div>\r\n                </div>\r\n                <div className={styles.rightColumn}>\r\n                    <p className={`text text_type_main-default ${styles.firstHeader}`}>В работе:</p>\r\n                    <div className={styles.nums}>{\r\n                        waiting?.map(s => (<p key={s} className={`text text_type_digits-default`}>{s}</p>))\r\n                    }</div>\r\n                </div>\r\n            </div>\r\n            <div className={styles.row}>\r\n                <p className={`text text_type_main-default  ${styles.header}`}>Выполнено за все время:</p>\r\n                <p className={`text text_type_digits-large`}>{total}</p>\r\n            </div>\r\n            <div className={styles.row}>\r\n                <p className={`text text_type_main-default ${styles.header}`}>Выполнено за сегодня:</p>\r\n                <p className={`text text_type_digits-large`}>{today}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import { RootState, AppThunk, AppDispatch } from \"..\";\r\nimport { TApplicationActions } from \"../services/actions\";\r\n\r\nexport {\r\n    type RootState,\r\n    type AppThunk,\r\n    type AppDispatch,\r\n    type TApplicationActions\r\n};\r\n\r\nexport type TIngredientName = 'Булки' | 'Начинки' | 'Соусы';\r\nexport type TIngredientType = 'bun' | 'main' | 'sauce';\r\n\r\nexport interface IIngredientCategory {\r\n    name: TIngredientName;\r\n    type: TIngredientType;\r\n};\r\n\r\nexport interface IIngredient {\r\n    _id: string;\r\n    name: string;\r\n    type: TIngredientType;\r\n    proteins: number;\r\n    fat: number;\r\n    carbohydrates: number;\r\n    calories: number;\r\n    price: number;\r\n    image: string;\r\n    image_mobile: string;\r\n    image_large: string;\r\n    __v: 0\r\n};\r\n\r\nexport interface IAuthUserInfo {\r\n    email: string;\r\n    name: string;\r\n};\r\n\r\nexport interface IAuthToken {\r\n    accessToken: string;\r\n    refreshToken: string;\r\n};\r\n\r\nexport interface IAuthResponse extends IAuthToken {\r\n    success: boolean;\r\n    user: IAuthUserInfo;\r\n};\r\n\r\nexport interface ILogoutResponse {\r\n    message: string;\r\n};\r\n\r\nexport interface ILocationState {\r\n    background: undefined;\r\n};\r\n\r\n\r\nexport interface IProfileForm {\r\n    name: string;\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport interface IResetPasswordForm {\r\n    password: string;\r\n    token: string;\r\n};\r\n\r\nexport interface ILoginForm {\r\n    email: string;\r\n    password: string;\r\n};\r\n\r\nexport interface IBasicAction<T> {\r\n    readonly type: T;\r\n};\r\n\r\nexport interface ILocationState {\r\n    from: {\r\n        pathname: string;\r\n    };\r\n};\r\n\r\nexport const TFeedOrderStatusDone: 'done' = 'done';\r\nexport const TFeedOrderStatusCreated: 'created' = 'created';\r\nexport const TFeedOrderStatusCanceled: 'canceled' = 'canceled';\r\nexport type TFeedOrderStatus = typeof TFeedOrderStatusDone\r\n    | typeof TFeedOrderStatusCreated\r\n    | typeof TFeedOrderStatusCanceled;\r\n\r\nexport interface IFeedOrder<TNumber> {\r\n    _id: string;\r\n    ingredients: string[];\r\n    status: TFeedOrderStatus;\r\n    name: string;\r\n    createdAt: string;\r\n    updatedAt: string;\r\n    number: TNumber;\r\n};\r\n\r\nexport interface IFeedOrdersMessage<TNumber> {\r\n    success: boolean;\r\n    orders: IFeedOrder<TNumber>[];\r\n    total: number;\r\n    totalToday: number;\r\n};\r\n\r\nexport interface IConstructorCounter {\r\n    [id: string]: number;\r\n};\r\n\r\nexport interface IConstructorItem {\r\n    id: string;\r\n    key: string;\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from '..';\r\nimport { FeedSummary } from '../components/feed-summary/feed-summary';\r\nimport { FeedList } from '../components/feed-list/feed-list';\r\nimport { openWsConnection, WS_CONNECTION_CLOSED } from '../services/actions/socket-middleware';\r\nimport styles from './feed.module.css';\r\nimport { WS_FEED_URL } from '../utils/constants';\r\n\r\n\r\nexport const FeedPage = () => {\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(openWsConnection(WS_FEED_URL));\r\n        return () => { dispatch({ type: WS_CONNECTION_CLOSED }) };\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (<>\r\n        <h1 className={`text_type_main-medium ${styles.staticText}`}>Лента заказов</h1>\r\n        <FeedList />\r\n        <FeedSummary />\r\n    </>);\r\n}\r\n\r\n\r\n","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector } from '../..';\r\nimport { IngredientIcon } from '../../ui/ingredient-icon/ingredient-icon';\r\nimport { IIngredient } from '../../utils/types';\r\nimport styles from './order-details.module.css';\r\n\r\ntype TIngredientGroup = { item: IIngredient; count: number };\r\nconst group = (ingredients: IIngredient[]): TIngredientGroup[] => {\r\n    const acc: TIngredientGroup[] = [];\r\n    ingredients.forEach(i => {\r\n        let grp = acc.find(g => g.item._id === i._id);\r\n        if (!grp) {\r\n            grp = { item: i, count: 0 };\r\n            acc.push(grp);\r\n        }\r\n        grp.count++;\r\n        if (i.type === 'bun') {\r\n            grp.count++;\r\n        }\r\n    });\r\n    return acc;\r\n}\r\nexport const OrderDetails = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const order = useSelector(state => state.feed.data.orders).find(o => o._id === id);\r\n    const ingredients = useSelector(store => store.ingredients.items)\r\n        .filter(i => order && order.ingredients.find(oi => oi === i._id)) || [];\r\n    if (!order) {\r\n        return null;\r\n    }\r\n    const groups = group(ingredients);\r\n    const price = groups.map(g => g.item.price * g.count).reduce((acc, n) => acc += n);\r\n    const date = new Date(order.createdAt);\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.firstRow}><p className='text text_type_digits-default'>#{order.number}</p></div>\r\n            <div className={styles.nameRow}>\r\n                <p className='text text_type_main-default'>{order.name}</p>\r\n                {(order.status === 'done') && <p className={`text text_type_main-small ${styles.done}`}>Выполнен</p>}\r\n            </div>\r\n            <div className={styles.itemsRow}>\r\n                <p className='text text_type_main-default'>Состав:</p>\r\n                <div className={styles.items}>\r\n                    {groups.map(g => (<div className={styles.ingredient} key={g.item._id}>\r\n                        <IngredientIcon image={g.item.image} />\r\n                        <p className={`text text_type_main-default`}>{g.item.name}</p>\r\n                        <div className={styles.itemPrice}>\r\n                            <p className={`text text_type_digits-default`}>{g.count}x{g.item.price}&nbsp;</p>\r\n                            <CurrencyIcon type='primary' />\r\n                        </div>\r\n                    </div>))\r\n                    }</div>\r\n            </div>\r\n            <div className={styles.lastRow}>\r\n                <p className={`text text_type_main-small ${styles.time}`}>{date.toLocaleString()}</p>\r\n                <div className={styles.itemPrice}>\r\n                    <p className={`text text_type_digits-default`}>{price}&nbsp;</p>\r\n                    <CurrencyIcon type='primary' /></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import styles from './feed-item.module.css'\r\nimport { OrderDetails } from \"../components/order-details/order-details\";\r\nimport { openWsConnection, WS_CONNECTION_CLOSED } from '../services/actions/socket-middleware';\r\nimport { useDispatch, useSelector } from '..';\r\nimport { useEffect } from 'react';\r\nimport { WS_FEED_URL, WS_ORDERS_URL } from '../utils/constants';\r\n\r\ninterface IProps {\r\n    orders?: boolean;\r\n}\r\nexport const FeedItemPage = ({ orders = false }: IProps) => {\r\n    const ws = useSelector(state => state.feed);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (!ws.wsConnected || !ws.data.success) {\r\n            if (orders) {\r\n                dispatch(openWsConnection(WS_ORDERS_URL, true));\r\n            } else {\r\n                dispatch(openWsConnection(WS_FEED_URL));\r\n            }\r\n\r\n        }\r\n        return () => { dispatch({ type: WS_CONNECTION_CLOSED }) };\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    return (<div className={styles.main} >\r\n        <div className={`form-area ${styles.box}`}>\r\n            <OrderDetails />\r\n        </div>\r\n    </div>);\r\n};","import { useCallback, useState } from \"react\";\r\nimport { Redirect, useLocation } from \"react-router-dom\";\r\nimport { Modal } from \"../modal/modal\";\r\nimport { OrderDetails } from \"../order-details/order-details\";\r\n\r\nexport const ModalFeedItem = () => {\r\n    const location = useLocation();\r\n    const [show, setShow] = useState(true);\r\n    const onHideDetails = useCallback(() => {\r\n        setShow(false);\r\n    }, [setShow]);\r\n    if (!show) {\r\n        /* @ts-ignore */\r\n        return (<Redirect to={location.state?.background?.pathname} />);\r\n    }\r\n    return (\r\n        <div >\r\n            <Modal headerText=' ' isShowing={show} toggle={onHideDetails}>\r\n                <OrderDetails />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};","import { useCallback, useState } from \"react\";\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { Modal } from '../modal/modal';\r\nimport { BurgerIngredientsModalDetails } from '../burger-ingredients-modal-details/burger-ingredients-modal-details';\r\n\r\n\r\nexport const ModalIngredient = () => {\r\n    const location = useLocation<{ from: string; }>();\r\n    const [show, setShow] = useState(true);\r\n    const onHideDetails = useCallback(() => {\r\n        setShow(false);\r\n    }, [setShow]);\r\n    if (!show) {\r\n        return (<Redirect to={location?.state?.from || '/'} />);\r\n    }\r\n    return (\r\n        <div >\r\n            <Modal headerText='Детали ингредиента' isShowing={show} toggle={onHideDetails}>\r\n                <BurgerIngredientsModalDetails />\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { FC } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useSelector } from '../..';\r\nimport styles from './modal-request.module.css';\r\n\r\nexport const ModalRequest: FC = () => {\r\n    const display = useSelector(state => state.authInfo.request || state.ingredients.request || state.orderDetails.request || state.resetPassword.request || state.feed.request);\r\n\r\n    return display ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n        <div className={styles.main} style={{display: display ? 'flex' : 'none'}} >\r\n            <div className={styles['lds-roller']}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n        </React.Fragment>, document.getElementById(\"react-modals\")!)\r\n    : null;\r\n};","import { useEffect } from 'react';\r\n\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport { ProtectedRoute } from '../protected-route/protected-route';\r\nimport { UnauthorizedRoute } from '../unauthorized-route/unauthorized-route';\r\n\r\nimport { AppHeader } from '../app-header/app-header'\r\nimport {\r\n  HomePage, LoginPage, RegisterPage, PasswordRecoverPage,\r\n  PasswordResetPage, ProfilePage, IngredientPage, NotFound404Page\r\n} from '../../pages';\r\n\r\nimport { getIngredients } from '../../services/actions/ingredients';\r\nimport { ILocationState } from '../../utils/types';\r\nimport { useDispatch, useSelector } from '../..';\r\nimport { FeedPage } from '../../pages/feed';\r\nimport { FeedItemPage } from '../../pages/feed-item';\r\nimport { ModalFeedItem } from '../modal-feed-item/modal-feed-item';\r\nimport { ModalIngredient } from '../modal-ingredient/modal-ingredient';\r\nimport { ModalRequest } from '../modal-request/moddal-request';\r\n\r\nconst App = () => {\r\n  const ingredients = useSelector(store => store.ingredients.items);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation<ILocationState>();\r\n\r\n  const background = location.state && location.state.background;\r\n\r\n  useEffect(() => {\r\n    if (!ingredients || ingredients.length === 0) {\r\n      dispatch(getIngredients());\r\n    }\r\n  }, [ingredients, dispatch]);\r\n\r\n  return (\r\n    <div className='main-grid'>\r\n      <AppHeader />\r\n      <Switch location={background || location}>\r\n        <UnauthorizedRoute path='/login' exact={true}>\r\n          <LoginPage />\r\n        </UnauthorizedRoute>\r\n        <UnauthorizedRoute path='/register' exact={true}>\r\n          <RegisterPage />\r\n        </UnauthorizedRoute>\r\n        <UnauthorizedRoute path='/forgot-password' exact={true}>\r\n          <PasswordRecoverPage />\r\n        </UnauthorizedRoute>\r\n        <UnauthorizedRoute path='/reset-password' exact={true}>\r\n          <PasswordResetPage />\r\n        </UnauthorizedRoute>\r\n        <Route path='/' exact={true}>\r\n          <HomePage />\r\n        </Route>\r\n        <Route path='/feed' exact={true}>\r\n          <FeedPage />\r\n        </Route>\r\n        <Route path='/feed/:id' exact={true}>\r\n          <FeedItemPage />\r\n        </Route>\r\n        <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n          <FeedItemPage orders={true} />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path='/profile' >\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <Route path='/ingredients/:id' exact={true}>\r\n          <IngredientPage />\r\n        </Route>\r\n        <Route >\r\n          <NotFound404Page />\r\n        </Route>\r\n      </Switch>\r\n      {background && <Route path=\"/ingredients/:id\" children={<ModalIngredient />} />}\r\n      {background && <Route path=\"/feed/:id\" children={<ModalFeedItem />} />}\r\n      {background && <Route path=\"/profile/orders/:id\" children={<ModalFeedItem />} />}\r\n      <ModalRequest />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { IIngredient, IIngredientCategory, TIngredientType } from \"../../utils/types\";\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    SET_ACTIVE_TAB,\r\n    TIngredientsActions\r\n} from \"../actions/ingredients\";\r\n\r\ninterface IIngredientsState {\r\n    items: IIngredient[];\r\n    cats: IIngredientCategory[];\r\n    activeTab: TIngredientType;\r\n    request: boolean;\r\n    failed: boolean;\r\n}\r\n\r\nexport const initialIngredients: IIngredientsState = {\r\n    items: [],\r\n    cats: [],\r\n    activeTab: 'bun',\r\n    request: false,\r\n    failed: false\r\n};\r\n\r\nexport const ingredientsReducer = (state = initialIngredients, action: TIngredientsActions) => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST:\r\n            return {\r\n                ...state,\r\n                request: true,\r\n                failed: false\r\n            };\r\n        case GET_INGREDIENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                items: action.ingredients,\r\n                cats: action.categories,\r\n                request: false,\r\n                failed: false\r\n            };\r\n        case GET_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                failed: true\r\n            }\r\n        case SET_ACTIVE_TAB:\r\n            return {\r\n                ...state,\r\n                activeTab: action.active\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n","import { IConstructorCounter, IConstructorItem } from '../../utils/types';\r\nimport { calcConstructorCounter } from '../../utils/utils';\r\nimport {\r\n    CHANGE_INGREDIENTS,\r\n    SET_PRICE,\r\n    UPDATE_INGREDIENTS_ORDER,\r\n    CLEAR_CONSTRUCTOR,\r\n    TConstructorActions\r\n} from '../actions/constructor';\r\n\r\ninterface IConstructorState {\r\n    bun: string;\r\n    items: IConstructorItem[];\r\n    price: number;\r\n    counter: IConstructorCounter;\r\n}\r\nexport const initialConstructor: IConstructorState =\r\n{\r\n    bun: '', items: [], price: 0, counter: {}\r\n};\r\nexport const constructorReducer = (state = initialConstructor, action: TConstructorActions) => {\r\n    switch (action.type) {\r\n        case CHANGE_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                bun: action.bun,\r\n                items: action.items,\r\n                counter: calcConstructorCounter(action.bun, action.items)\r\n            };\r\n        case UPDATE_INGREDIENTS_ORDER:\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            };\r\n        case CLEAR_CONSTRUCTOR:\r\n            return initialConstructor;\r\n        case SET_PRICE:\r\n            return {\r\n                ...state,\r\n                price: action.price\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_SUCCESS,\r\n    GET_ORDER_FAILED,\r\n    CLOSE_ORDER,\r\n    TOrderDetailsActions,\r\n} from '../actions/order-details';\r\n\r\ninterface IOrderDetailsState {\r\n    number: string;\r\n    name: string;\r\n    request: boolean;\r\n    failed: boolean;\r\n    show: boolean;\r\n}\r\n\r\nexport const initialOrderDetails: IOrderDetailsState =\r\n{\r\n    number: '',\r\n    name: '',\r\n    request: false,\r\n    failed: false,\r\n    show: false\r\n};\r\n\r\nexport const orderDetailsReducer = (state = initialOrderDetails, action: TOrderDetailsActions) => {\r\n    switch (action.type) {\r\n        case GET_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                request: true,\r\n                failed: false\r\n            };\r\n        case GET_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                failed: false,\r\n                number: action.number,\r\n                name: action.name,\r\n                show: true\r\n            };\r\n        case GET_ORDER_FAILED:\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                failed: true\r\n            };\r\n        case CLOSE_ORDER:\r\n            return {\r\n                ...state,\r\n                show: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n","import {\r\n    RESET_PASSWORD_REQUEST,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_FAILED,\r\n    TResetPasswordActions,\r\n} from '../actions/reset-password';\r\n\r\ninterface IResetPasswordState {\r\n    message: string;\r\n    step: string;\r\n    request: boolean;\r\n    failed: boolean;\r\n};\r\nexport const initialResetPassword: IResetPasswordState =\r\n{\r\n    message: '',\r\n    step: '',\r\n    request: false,\r\n    failed: false\r\n};\r\n\r\nexport const resetPasswordReducer = (state = initialResetPassword, action: TResetPasswordActions) => {\r\n    switch (action.type) {\r\n        case RESET_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                request: true,\r\n                failed: false\r\n            };\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                failed: false,\r\n                message: action.message,\r\n                step: action.stepOnSuccess\r\n            };\r\n        case RESET_PASSWORD_FAILED:\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                failed: true,\r\n                message: action.error,\r\n                step: action.stepOnFailed\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n","import { IAuthUserInfo } from '../../utils/types';\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILED,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAILED,\r\n    TAuthInfoActions,\r\n} from '../actions/auth-info';\r\n\r\ninterface IAuthInfoState {\r\n    request: boolean;\r\n    success: boolean;\r\n    user: IAuthUserInfo;\r\n};\r\n\r\nexport const initialAuthState: IAuthInfoState = {\r\n    request: false,\r\n    success: false,\r\n    user: {\r\n        email: '',\r\n        name: ''\r\n    }\r\n};\r\n\r\nexport const authInfoReducer = (state = initialAuthState, action: TAuthInfoActions) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST: return {\r\n            ...state,\r\n            request: true,\r\n        };\r\n        case LOGIN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                request: false,\r\n                success: action.authInfo.success,\r\n                user: action.authInfo.user\r\n            };\r\n        } case LOGIN_FAILED: return {\r\n            ...state,\r\n            request: false,\r\n        };\r\n        case LOGOUT_REQUEST: return {\r\n            ...state,\r\n            request: true\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            return initialAuthState;\r\n        }\r\n        case LOGOUT_FAILED: return {\r\n            ...state,\r\n            request: false,\r\n        };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import { IFeedOrdersMessage } from \"../../utils/types\";\r\nimport { padOrderNumber } from \"../../utils/utils\";\r\nimport { TSocketMiddlewareActions, WS_CONNECTION_CLOSED, WS_CONNECTION_ERROR, WS_CONNECTION_START, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from \"../actions/socket-middleware\";\r\n\r\ninterface IWsState {\r\n  wsConnected: boolean;\r\n  request: boolean;\r\n  data: IFeedOrdersMessage<string>;\r\n\r\n  error?: Event;\r\n};\r\n\r\nexport const initialWsState: IWsState = {\r\n  wsConnected: false,\r\n  request: false,\r\n  data: {\r\n    success: false,\r\n    orders: [],\r\n    total: 0,\r\n    totalToday: 0\r\n  }\r\n};\r\n// Создадим редьюсер для WebSocket\r\nexport const wsReducer = (state = initialWsState, action: TSocketMiddlewareActions): IWsState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_START:\r\n      return {\r\n        ...state,\r\n        request: true,\r\n      };\r\n    // Опишем обработку экшена с типом WS_CONNECTION_SUCCESS\r\n    // Установим флаг wsConnected в состояние true\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        request: false,\r\n        wsConnected: true\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_ERROR\r\n    // Установим флаг wsConnected в состояние false и передадим ошибку из action.payload\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        request: false,\r\n        error: action.payload,\r\n        wsConnected: false\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_CLOSED, когда соединение закрывается\r\n    // Установим флаг wsConnected в состояние false\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: false\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_GET_MESSAGE\r\n    // Обработка происходит, когда с сервера возвращаются данные\r\n    // В messages передадим данные, которые пришли с сервера\r\n    case WS_GET_MESSAGE: {\r\n      const message: IFeedOrdersMessage<number> = JSON.parse(action.payload);\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        data: {\r\n          ...message,\r\n          orders: message.orders?.map(o => ({ ...o, number: padOrderNumber(o.number) })) ?? []\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}; \r\n","import { combineReducers } from \"redux\";\r\nimport { ingredientsReducer, initialIngredients } from \"./ingredients\";\r\nimport { constructorReducer, initialConstructor } from \"./constructor\";\r\nimport { orderDetailsReducer, initialOrderDetails } from \"./order-details\";\r\nimport { resetPasswordReducer, initialResetPassword } from \"./reset-password\";\r\nimport { authInfoReducer, initialAuthState } from \"./auth-info\";\r\nimport { initialWsState, wsReducer } from \"./socket-middleware\";\r\n\r\nexport const preloadedState = {\r\n    ingredients: initialIngredients,\r\n    constructor: initialConstructor,\r\n    orderDetails: initialOrderDetails,\r\n    resetPassword: initialResetPassword,\r\n    authInfo: initialAuthState,\r\n    wsState: initialWsState\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients: ingredientsReducer,\r\n    constructor: constructorReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    resetPassword: resetPasswordReducer,\r\n    authInfo: authInfoReducer,\r\n    feed: wsReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { compose, createStore, applyMiddleware, Action, ActionCreator } from 'redux';\r\nimport { Provider, TypedUseSelectorHook, useSelector as selectorHook, useDispatch as dispatchHook } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport { rootReducer } from './services/reducers';\r\nimport thunk, { ThunkAction } from 'redux-thunk';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { TApplicationActions } from './services/actions';\r\nimport { socketMiddleware } from './utils/socket-middleware';\r\nimport { wsActions } from './services/actions/socket-middleware';\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\n// Типизация thunk'ов в нашем приложении\r\nexport type AppThunk<TReturn = void> = ActionCreator<\r\n  ThunkAction<TReturn, Action, RootState, TApplicationActions>>;\r\n\r\n// Типизация метода dispatch для проверки на валидность отправляемого экшена\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n//export const useDispatch = () => dispatchHook<ThunkDispatch<RootState, never, TApplicationActions>>();\r\n/* @ts-ignore*/\r\nexport const useDispatch = () => dispatchHook<AppThunk | AppDispatch>();\r\n\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// socketMiddleware.ts\r\nimport type { Middleware, MiddlewareAPI } from 'redux';\r\nimport { IWsActions, TSocketMiddlewareActions } from '../services/actions/socket-middleware';\r\nimport { AppDispatch, RootState } from './types';\r\n\r\n\r\nexport const socketMiddleware = (wsActions : IWsActions) : Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => (action: TSocketMiddlewareActions) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n\r\n      if (type === wsActions.wsStart) {\r\n        // объект класса WebSocket\r\n        socket = new WebSocket(payload);\r\n      }\r\n\r\n      if (socket) {\r\n\r\n        // функция, которая вызывается при открытии сокета\r\n        socket.onopen = event => {\r\n          dispatch(wsActions.onOpen(event));\r\n        };\r\n\r\n        // функция, которая вызывается при ошибке соединения\r\n        socket.onerror = event => {\r\n          dispatch(wsActions.onError(event));\r\n        };\r\n\r\n        // функция, которая вызывается при получения события от сервера\r\n        socket.onmessage = event => {\r\n          dispatch(wsActions.onMessage(event));\r\n        };\r\n        // функция, которая вызывается при закрытии соединения\r\n        socket.onclose = event => {\r\n          dispatch(wsActions.onClose(event));\r\n        };\r\n\r\n        if (type === wsActions.wsSend) {\r\n          const message = payload;\r\n          // функция для отправки сообщения на сервер\r\n          socket.send(JSON.stringify(message));\r\n        }\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  }) as Middleware;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"order-details_main__3F3Md\",\"row\":\"order-details_row__S-1G2\",\"firstRow\":\"order-details_firstRow__9fJtR order-details_row__S-1G2\",\"nameRow\":\"order-details_nameRow__3k9Di order-details_row__S-1G2\",\"done\":\"order-details_done__1cj5U\",\"itemsRow\":\"order-details_itemsRow__WhUUy order-details_row__S-1G2\",\"items\":\"order-details_items__2LTYW index_scrollable__2QHK6\",\"ingredient\":\"order-details_ingredient__2cMdF\",\"lastRow\":\"order-details_lastRow__ixsSO order-details_row__S-1G2\",\"itemPrice\":\"order-details_itemPrice__kppIk\",\"time\":\"order-details_time__2vu8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-order_main__8YS72\",\"content\":\"feed-order_content__kpasH\",\"ingredients\":\"feed-order_ingredients__3fUIo\",\"price\":\"feed-order_price__1Agj3\",\"icon\":\"feed-order_icon__3FsA5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor-list_main__3CQk_\",\"onHover\":\"burger-constructor-list_onHover__1LDiU\",\"topBun\":\"burger-constructor-list_topBun__QcqmC\",\"bottomBun\":\"burger-constructor-list_bottomBun__QgzVF\",\"ingredients\":\"burger-constructor-list_ingredients__3pEGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"app-header_nav__2yQ5d\",\"leftItems\":\"app-header_leftItems__31DWK\",\"rightItems\":\"app-header_rightItems__2JB2i app-header_leftItems__31DWK\",\"homeLink\":\"app-header_homeLink__3UU1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app-header-button_main__2MbPt\",\"iconWrapper\":\"app-header-button_iconWrapper__1I9v0\",\"textWrapper\":\"app-header-button_textWrapper__rGRtb\",\"active\":\"app-header-button_active__1VjSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients-card_main__3EcQj\",\"priceWrapper\":\"burger-ingredients-card_priceWrapper__lt1s6\",\"textWrapper\":\"burger-ingredients-card_textWrapper__1h7GQ\",\"logoWrapper\":\"burger-ingredients-card_logoWrapper__2RA7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"modal_main__dlGeq\",\"modalHeader\":\"modal_modalHeader__3PnG4\",\"closeButton\":\"modal_closeButton__2TH7A\",\"modalContent\":\"modal_modalContent__dyzna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"password-recover_main__1IeRc index_content-grid__BhKkB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor-item_main__3d7LX\",\"ingredientWrapper\":\"burger-constructor-item_ingredientWrapper__1I7rf\",\"dragIconWrapper\":\"burger-constructor-item_dragIconWrapper__1OZ7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor-submit_main__11ikr\",\"iconWrapper\":\"burger-constructor-submit_iconWrapper__1qY5V\",\"buttonWrapper\":\"burger-constructor-submit_buttonWrapper__1wbQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-constructor-modal-order_main__jMmCb\",\"confirmButton\":\"burger-constructor-modal-order_confirmButton__2t-V2\",\"comment\":\"burger-constructor-modal-order_comment__22thk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"common-form_main__3ZqZ6\",\"header\":\"common-form_header__3PQvU\",\"buttonWrapper\":\"common-form_buttonWrapper__Gqhnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ingredient_main__3G23r index_content-grid__BhKkB\",\"box\":\"ingredient_box__f9aH_\",\"header\":\"ingredient_header__3ViWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients-modal-details_main__1gUkn\",\"details\":\"burger-ingredients-modal-details_details__2FUCD\",\"info\":\"burger-ingredients-modal-details_info__38Gpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"burger-ingredients-category_main__w4X02\",\"textWrapper\":\"burger-ingredients-category_textWrapper___0lC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientBg\":\"ingredient-icon_ingredientBg__31vUJ\",\"ingredient\":\"ingredient-icon_ingredient__moT4a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-list_main__34FgW\",\"link\":\"feed-list_link__F570o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed-item_main__2TiuA index_content-grid__BhKkB\",\"box\":\"feed-item_box__2nw8H\",\"header\":\"feed-item_header__gqDcu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"modal-request_main__3j-Hv\",\"lds-roller\":\"modal-request_lds-roller__4AtI6\"};"],"sourceRoot":""}